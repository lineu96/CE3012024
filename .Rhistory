maior_var <- if(coef_var_alt > coef_var_peso){
"ALTURA"
} else {
"PESO"
}
#resposta
paste("A coef. varia??o da altura ? ", round(var_alt, 2),  " enquanto a coef. varia??o do peso ? ", round(var_peso, 2), ". Assim a vari?vel ", maior_var, " apresenta maior variabilidade.", sep = "")
#Coef. Varia??o da altura
coef_var_alt <- dp_altura / media_altura
#Coef. Varia??o do peso
coef_var_peso <- dp_peso / media_peso
coef_var_alt
coef_var_peso
#gerando o histograma
plot(density(dados$peso))
hist(dados$peso, main = "Histograma dos pesos", xlab = "Peso", probability =T)
lines(density(dados$peso))
#resposta
paste("Atrav?s do histpgrama da vari?vel peso, percebemos que esta possui uma consider?vel assimetria ? direita")
#obtendo os quartis
quantile(dados$altura)
#obtendo o primeiro quartil
q1 <- quantile(dados$altura, probs = 0.25)
q1
#obtendo o terceiro quartil
q3 <- quantile(dados$altura, probs = 0.75)
q3
#obtendo as amplitudes interquartis
amp_inter_quartil <- IQR(dados$altura)
amp_inter_quartil
#obtendo o limite inferior
lim_inf <- q1 - (1.5 * amp_inter_quartil)
lim_inf
#obtendo o limite superior
lim_inf <- q3 + (1.5 * amp_inter_quartil)
lim_inf
#gerando o boxpolt da vari?vel altura
boxplot(dados$altura, main = "Boxplot da vari?vel altura")
#resposta8
paste("Atrav?s da an?lise do boxplot das alturas, conclu?mos que a vari?vel ? sim?trica, n?o apresentando valores at?picos")
tabela9 <- table(dados$sexo, dados$turma)
tabela9
freq_rel <- prop.table(tabela9, margin = 2)
freq_rel
?cbind
tabela_final <- cbind(tabela9, freq = freq_rel)
tabela_final
dimnames(tabela_final)
dimnames(tabela_final) <- list(Sexo = c("Masculino", "Feminino"), Turma = c("FA Turma A", "FA Turma B", "F.R Turma A", "F.R Turma B"))
tabela_final
#Utilizaremos o Qui-Quadrado como medida de associa??o que ser? obtido atrav?s da fun??o chisq.test
assoc = chisq.test(tabela9)
assoc
?chisq.test
assoc$expected
sum(assoc$expected[[1]], assoc$expected[[2]])
assoc$expected[,1]
assoc$expected[2,]
assoc$expected[1,2]
assoc$expected[2,1]
soma.l <- (apply(assoc$expected, 1, sum))
soma.c <- (apply(assoc$expected, 2, sum))
tabela <- rbind(cbind(assoc$expected, assoc$observed, soma.c), soma.l)
tabela
dimnames(tabela)[[1]] <- c("Feminino", "Masculino", "Total")
dimnames(tabela)[[2]] <- c("Esp. A", "Esp. B", "Obs. A", "Obs. B", "Total")
tabela[3,5] <- 10 #ajusta a soma dos valores
tabela
#obtendo o valor do Qui-Quadrado
qui_q <- assoc$statistic
qui_q
# Biblioteca utilizada na questão 10
library(ggplot2)
# Dados
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
# Questão 3
# Tabela de frequências para a variável turma
tabela0<-table(dados$turma)
tabela02<-prop.table(tabela0)
tabela1 = data.frame(turma = names(tabela0),
freq = as.vector(tabela0),
freq_r = as.vector(tabela02))
tabela1
tabela1[3,1] <- "TOTAL"
tabela1[3,2] <- sum(tabela1$freq, na.rm = T)
tabela1[3,3] <- sum(tabela1$freq_r, na.rm = T)
tabela1
names(tabela1)
names(tabela1) <- c("Turmas",
"Freq. absoluta",
"Freq. Relativa")
tabela1
breaks <- seq(40,90,10)
classes <- cut(dados$peso,
breaks = breaks,
include.lowest = TRUE,
right = FALSE)
tabela2 <- table(classes)
tabela2
media_altura <- mean(dados$altura)
desvio_padrao_altura <- sd(dados$altura)
media_peso <- mean(dados$peso)
desvio_padrao_peso <- sd(dados$peso)
media_altura
desvio_padrao_altura
media_peso
desvio_padrao_peso
# Questão 6
# Comparação de variabilidade entre altura e peso
cov_altura<-round((desvio_padrao_altura/media_altura)*100)
cov_peso<-round((desvio_padrao_peso/media_peso)*100)
cov_altura
cov_peso
# Questão 7
# Histograma dos pesos
hist(dados$peso)
# Questão 8
# Boxplot das alturas
quantile(dados$altura)
boxplot(dados$altura,horizontal = T)
# Questão 9
# Tabela de dupla entrada para sexo e turma
tabela_dupla <- table(dados$sexo, dados$turma)
tabela_dupla
# Questão 10
# Boxplot comparando altura e sexo
boxplot_altura_sexo <- ggplot(dados, aes(x = sexo, y = altura, fill = sexo)) +
geom_boxplot() +
labs(title = "Boxplot de Altura por Sexo",
x = "Sexo",
y = "Altura") +
theme_minimal()
scatterplot_peso_altura <- ggplot(dados, aes(x = altura, y = peso)) +
geom_point() +
labs(title = "Diagrama de Dispersão de Peso por Altura",
x = "Altura",
y = "Peso") +
theme_minimal()
boxplot_altura_sexo
scatterplot_peso_altura
# Questão 11
# Medida de associação entre turma e sexo
tabela3<-table(dados$turma,dados$sexo)
chisq.test(tabela3)
Turma <- c("A","B","A","B","A","B","A","A","B","A")
Sexo <- c("M","F","F","F","F","M","M","M","F","F")
Altura <- c(185,170,160,167,157,176,178,180,165,170)
Peso <- c(81,60,60,58,49,75,68,85,56,60)
dados <- data.frame(Turma = Turma, Sexo = Sexo, Altura = Altura, Peso = Peso)
turma <- table(dados$Turma)
turma
turmafr <- prop.table(turma)
turmafr
tabela01 <- data.frame(Turma = names(turma),
freq = as.vector(turma),
freqr = as.vector(turmafr))
tabela01
peso <- Peso
peso
separacao <- seq(40, 90, 10)
fa <- c("[40-50)","[50-60)","[60-70)","[70-80)","[80-90]")
table(cut(peso, breaks = separacao,right = FALSE,labels = fa ))
MédiaA = mean(dados$Altura)
MédiaA
MédiaP = mean(Peso)
MédiaP
dva <- sd(dados$Altura)
dva
dvp <- sd(dados$Peso)
dvp
cva <- (dva/MédiaA)*100
cva
cvp <- (dvp/MédiaP)*100
cvp
hist(peso, right = FALSE)
#8) Não há presença de valores átipicos, uma vez que são valores "comuns".
#valores utilizados para o esboço:
min(Altura)
max(Altura)
median(Altura)
quantile(Altura)
boxplot(Altura, horizontal = TRUE, col= 'light blue')
de <- table(dados$Sexo, dados$Turma)
de
addmargins(de)
defr <- prop.table(de)
addmargins(defr)
m <- table(dados$Turma,dados$Sexo)
n <- addmargins(m)
o <- (n[1:2,3] %*% t(n[3,1:2]))/sum(m)
sum((m-o)^2/(o))
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
table(dados$turma)
table(dados$turma)
tabela <- table(dados$turma)
prop.table(tabela)
table(dados$peso)
breaks <- seq(40,90,10)
classes <- cut(dados$peso, breaks = breaks, include.lowest = TRUE, right = FALSE)
table(classes)
mean(dados$altura)
sd(dados$altura)
mean(dados$peso)
sd(dados$peso)
CValtura <- sd(dados$altura) / mean(dados$altura)
CValtura
CVpeso <- sd(dados$peso) / mean(dados$peso)
CVpeso
hist(dados$peso, include.lowest = TRUE, right = FALSE)
dados$altura
median(dados$altura)
Q2 <- median(dados$altura)
quantile(dados$altura)
quantile(dados$altura) [4]
Q3 <- quantile(dados$altura) [4]
quantile(dados$altura) [2]
Q1 <- quantile(dados$altura) [2]
quantile (dados$altura) [4] - quantile(dados$altura) [2]
AIQ <- Q3 - Q1
max(dados$altura)
min(dados$altura)
boxplot(dados$altura)
table(dados$sexo)
table(dados$turma)
install.packages('gmodels')
library(gmodels)
CrossTable(dados$sexo, dados$turma, prop.r = FALSE, prop.c = FALSE, prop.t = FALSE, prop.chisq = FALSE, chisq = FALSE, fisher = FALSE, mcnemar = FALSE, format = 'SAS')
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
ggplot(dados, aes(x=altura, y=peso))+
geom_point()
boxplot(dados$altura ~ dados$sexo)
chisq.test(dados$turma, dados$sexo)
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
# 03) Monte uma tabela de frequências para a variável turma. Use frequências absolutas e relativas
turma <- dados$turma
tabela_turma <- table(turma)
print(tabela_turma) #tabela de frequencia absoluta
print(prop.table(tabela_turma)) #tabela de frequencia relativa
# 04) Monte uma tabela de frequências para a variável peso com faixas de 10 valores
limites <- c(40, 50, 60, 70, 80, 90)
peso <- dados$peso
faixas <- cut(peso, breaks = limites) # definindo as faixas de valores ja com os dados da variavel PESO
tabela_peso <- table(faixas)
print(tabela_peso)
# 05) Obtenha média e desvio padrão para as variáveis altura e peso
altura <- dados$altura
mean(altura) # media altura
sd(altura) # desvio padrao altura
mean(peso) # media peso
sd(peso) # desvio padrao peso
# 06) Altura e peso são variáveis em diferentes escalas, qual delas apresenta variabilidade maior?
cf_altura <- sd(altura)/mean(altura)
cf_peso <- sd(peso)/mean(peso) # o ideal é utilizar o coeficiente de variação
cf_peso > cf_altura # coeficiente de variação é maior na variavel PESO
# 07) Com base na tabela do item (4), esboce o histograma dos pesos
hist(peso)
cf_altura
cf_peso
# 07) Com base na tabela do item (4), esboce o histograma dos pesos
hist(peso)
# 08) Obtenha as quantidades necessárias e esboce o box-plot das alturas
summary(altura) # apresenta os quartis, pontos minimos e maximos da variável
boxplot(altura)
# 09) Monte uma tabela de dupla entrada usando frequências absolutas para sexo e turma
sexo <- dados$sexo
tabela_dupla_ST <- table(sexo, turma)
print(tabela_dupla_ST)
# 10) Avalie os gráficos abaixo.
boxplot(altura ~ sexo) # boxplot
plot(altura ~ peso) # modelo de dispersao
# 11) Obtenha uma medida de associação entre sexo e turma
chisq.test(tabela_dupla_ST) # medida de associação para duas variáveis qualitativas é o QUI-QUADRADO
setwd("~/CE3012024")
posicao <- function(vetor){
table <- data.frame(n = sum(!is.na(vetor)),
Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('n', 'Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`PROVA 4` <- as.numeric(notas$`PROVA 4`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`TRABALHO 1` <- as.numeric(notas$`TRABALHO 1`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5', 'TRABALHO 1')]) /6
notas$`MÉDIA REMOTAS`
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`PROVA 4` <- as.numeric(notas$`PROVA 4`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`TRABALHO 1` <- as.numeric(notas$`TRABALHO 1`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5', 'TRABALHO 1')]) /6
notas$`MÉDIA REMOTAS`
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
soma_parciais
menor_parcial <- pmin(
ifelse(
is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 4`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
menor_parcial
pre_exame <- round((soma_parciais-menor_parcial)/4, 1)
pre_exame
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4 | notas$FALTAS > 15,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
notas$`SITUAÇÃO FINAL`
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
#'PROVA 2',
#'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'TRABALHO 1'#,
#'REMOTA 3',
#'REMOTA 4',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME",
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`TRABALHO 1`))
pander::pander(dispersao(notas$`TRABALHO 1`))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=`TRABALHO 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`TRABALHO 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("TRABALHO 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=`TRABALHO 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
ggplot(notas) +
geom_histogram(aes(x=`TRABALHO 1`,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=`TRABALHO 1`,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("TRABALHO 1")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = notas,
mapping = aes(y=`TRABALHO 1`, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
#xlim(c(0,10)) +
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
scale_y_continuous(limits = c(0, 10))+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
setwd("~/CE3012024")
rmarkdown::render_site()
270*8*22
