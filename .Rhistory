faces
## Moeda honesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
lancamentos
## Moeda desonesta
#lancamentos <- sample(faces,
#                      n_lancamentos,
#                      replace = TRUE,
#                      prob = c(0.7, 0.3))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$caras <- cumsum(ifelse(resultados$resultado == 'cara',1,0))/resultados$tentativa
resultados$coroas <- cumsum(ifelse(resultados$resultado == 'coroa',1,0))/resultados$tentativa
head(resultados)
#----------------------------------------------------------------------
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de uma moeda diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- c('cara', 'coroa')
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 10000
#-----------------------------------------------------------------------
# Jogos
## Moeda honesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
## Moeda desonesta
#lancamentos <- sample(faces,
#                      n_lancamentos,
#                      replace = TRUE,
#                      prob = c(0.7, 0.3))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$caras <- cumsum(ifelse(resultados$resultado == 'cara',1,0))/resultados$tentativa
resultados$coroas <- cumsum(ifelse(resultados$resultado == 'coroa',1,0))/resultados$tentativa
#-----------------------------------------------------------------------
# Plotando os resultados
legenda <- c("Cara" = 2,
"Coroa" = 4)
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = caras, color = "Cara"), size = 1) +
geom_line(aes(y = coroas, color = "Coroa"), size = 1) +
geom_hline(yintercept=0.5,
linetype="dashed", color = "black") +
ylim(0,1) +
#transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda) +
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Moeda")
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
faces
#----------------------------------------------------------------------
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de uma moeda diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- c('cara', 'coroa')
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 10000
#-----------------------------------------------------------------------
# Jogos
## Moeda honesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
## Moeda desonesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE,
prob = c(0.7, 0.3))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$caras <- cumsum(ifelse(resultados$resultado == 'cara',1,0))/resultados$tentativa
resultados$coroas <- cumsum(ifelse(resultados$resultado == 'coroa',1,0))/resultados$tentativa
#-----------------------------------------------------------------------
# Plotando os resultados
legenda <- c("Cara" = 2,
"Coroa" = 4)
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = caras, color = "Cara"), size = 1) +
geom_line(aes(y = coroas, color = "Coroa"), size = 1) +
geom_hline(yintercept=0.5,
linetype="dashed", color = "black") +
ylim(0,1) +
#transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda) +
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Moeda")
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de um dado diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- 1:6
faces
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 3500
## Dado honesto
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
lancamentos
lancamentos
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$face1 <- cumsum(ifelse(resultados$resultado == 1,1,0))/resultados$tentativa
resultados$face2 <- cumsum(ifelse(resultados$resultado == 2,1,0))/resultados$tentativa
resultados$face3 <- cumsum(ifelse(resultados$resultado == 3,1,0))/resultados$tentativa
resultados$face4 <- cumsum(ifelse(resultados$resultado == 4,1,0))/resultados$tentativa
resultados$face5 <- cumsum(ifelse(resultados$resultado == 5,1,0))/resultados$tentativa
resultados$face6 <- cumsum(ifelse(resultados$resultado == 6,1,0))/resultados$tentativa
head(resultados)
resultados[nrow(resultados),]
1/6
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o primeriro jogo do problema de Chavalier:
# lança-se um dado até no máximo quatro vezes e ganha se obtiver um seis.
#
# O jogo é simulado diversas vezes e são calculadas as frequências
# relativas de vitórias e derrotas conforme o número de lançamentos
# aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Número de jogadas
n_jogadas <- 3500
#-----------------------------------------------------------------------
# Jogadas
jogos <- c()
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = T)
sample(1:6, 4, replace = T) == 6
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o primeriro jogo do problema de Chavalier:
# lança-se um dado até no máximo quatro vezes e ganha se obtiver um seis.
#
# O jogo é simulado diversas vezes e são calculadas as frequências
# relativas de vitórias e derrotas conforme o número de lançamentos
# aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Número de jogadas
n_jogadas <- 3500
#-----------------------------------------------------------------------
# Jogadas
jogos <- c()
for (i in 1:n_jogadas) {
jogos[i] <- ifelse(sum(sample(1:6, 4, replace = T) == 6) >= 1,
'vitória', 'derrota')
}
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_jogadas,
resultado = jogos)
resultados$vitória <- cumsum(ifelse(resultados$resultado == 'vitória',1,0))/resultados$tentativa
resultados$derrota <- cumsum(ifelse(resultados$resultado == 'derrota',1,0))/resultados$tentativa
resultados
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o segundo jogo do problema de Chavalier:
# lançam-se dois dados até no máximo 24 vezes e ganha se obtiver um
# duplo seis.
#
# O jogo é simulado diversas vezes e são calculadas as frequências
# relativas de vitórias e derrotas conforme o número de lançamentos
# aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Número de jogadas
n_jogos <- 3500
#-----------------------------------------------------------------------
# Jogadas
rodada <- c()
jogos <- c()
#-----------------------------------------------------------------------
# Jogadas
rodada <- c()
jogos <- c()
for (j in 1:n_jogos) {
for (i in 1:24) {
rodada[i] <- ifelse(sum(c(sample(1:6, 1), sample(1:6, 1)) == 6) == 2,
'vitória', 'derrota')
}
jogos[j] <- ifelse(sum(rodada == 'vitória') >= 1, 'vitória', 'derrota')
}
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_jogos,
resultado = jogos)
resultados$vitória <- cumsum(ifelse(resultados$resultado == 'vitória',1,0))/resultados$tentativa
resultados$derrota <- cumsum(ifelse(resultados$resultado == 'derrota',1,0))/resultados$tentativa
head(resultados)
#----------------------------------------------------------------------
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de uma moeda diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- c('cara', 'coroa')
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 10000
#-----------------------------------------------------------------------
# Jogos
## Moeda honesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
## Moeda desonesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE,
prob = c(0.7, 0.3))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$caras <- cumsum(ifelse(resultados$resultado == 'cara',1,0))/resultados$tentativa
resultados$coroas <- cumsum(ifelse(resultados$resultado == 'coroa',1,0))/resultados$tentativa
#-----------------------------------------------------------------------
# Plotando os resultados
legenda <- c("Cara" = 2,
"Coroa" = 4)
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = caras, color = "Cara"), size = 1) +
geom_line(aes(y = coroas, color = "Coroa"), size = 1) +
geom_hline(yintercept=0.5,
linetype="dashed", color = "black") +
ylim(0,1) +
#transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda) +
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Moeda")
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#----------------------------------------------------------------------
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de um dado diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- 1:6
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 3500
#-----------------------------------------------------------------------
# Jogos
## Dado honesto
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
## Dado desonesto
# lancamentos <- sample(faces,
#                       n_lancamentos,
#                       replace = TRUE,
#                       prob = c(0.01,0.05,0.1,0.1,0.3,0.44))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$face1 <- cumsum(ifelse(resultados$resultado == 1,1,0))/resultados$tentativa
resultados$face2 <- cumsum(ifelse(resultados$resultado == 2,1,0))/resultados$tentativa
resultados$face3 <- cumsum(ifelse(resultados$resultado == 3,1,0))/resultados$tentativa
resultados$face4 <- cumsum(ifelse(resultados$resultado == 4,1,0))/resultados$tentativa
resultados$face5 <- cumsum(ifelse(resultados$resultado == 5,1,0))/resultados$tentativa
resultados$face6 <- cumsum(ifelse(resultados$resultado == 6,1,0))/resultados$tentativa
legenda <- c("1" = 2,
"2" = 3,
"3" = 4,
"4" = 5,
"5" = 6,
"6" = 7)
#-----------------------------------------------------------------------
# Plotando os resultados
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = face1, color = "1"), size = 1) +
geom_line(aes(y = face2, color = "2"), size = 1) +
geom_line(aes(y = face3, color = "3"), size = 1) +
geom_line(aes(y = face4, color = "4"), size = 1) +
geom_line(aes(y = face5, color = "5"), size = 1) +
geom_line(aes(y = face6, color = "6"), size = 1) +
geom_hline(yintercept=1/6,
linetype="dashed", color = "black") +
ylim(0,1) +
#transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda)+
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Dado")
#-----------------------------------------------------------------------
# Comparando as frequências relativas com as probabilidades esperadas
resultados[nrow(resultados),]
#-----------------------------------------------------------------------
resultados[nrow(resultados),]
1/16
1/6
# CE301 - Estatística Básica
# PRÁTICAS EM R
#----------------------------------------------------------------------
# Prof. Me Lineu Alberto Cavazani de Freitas
#-----------------------------------------------------------------------
# Os comandos a seguir simulam o lançamento de uma moeda diversas vezes
# e verifica as alterações das frequências relativas conforme o número
# de lançamentos aumenta.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
library(gganimate)
library(ggplot2)
#-----------------------------------------------------------------------
# Faces
faces <- c('cara', 'coroa')
#-----------------------------------------------------------------------
# Número de lançamentos
n_lancamentos <- 10000
## Moeda honesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE)
## Moeda desonesta
lancamentos <- sample(faces,
n_lancamentos,
replace = TRUE,
prob = c(0.7, 0.3))
#-----------------------------------------------------------------------
# Organizando resultados
resultados <- data.frame(tentativa = 1:n_lancamentos,
resultado = lancamentos)
resultados$caras <- cumsum(ifelse(resultados$resultado == 'cara',1,0))/resultados$tentativa
resultados$coroas <- cumsum(ifelse(resultados$resultado == 'coroa',1,0))/resultados$tentativa
#-----------------------------------------------------------------------
# Plotando os resultados
legenda <- c("Cara" = 2,
"Coroa" = 4)
ggplot(resultados, aes(x = tentativa)) +
geom_line(aes(y = caras, color = "Cara"), size = 1) +
geom_line(aes(y = coroas, color = "Coroa"), size = 1) +
geom_hline(yintercept=0.5,
linetype="dashed", color = "black") +
ylim(0,1) +
transition_reveal(tentativa) +
labs(x = "Lançamentos",
y = "Freq. Relativa",
color = "") +
scale_color_manual(values = legenda) +
theme_bw() +
theme(legend.position='top',
legend.justification='left',
legend.direction='horizontal') +
ggtitle("Moeda")
#-----------------------------------------------------------------------
# Considere que foi coletada uma amostra de animais.
# Cada um destes animais foi categorizado de acordo com o sexo (macho
# ou fêmea) e com a espécie (A, B ou C).
#
# O código R a seguir gera o conjunto de dados associado ao problema.
#
# Com base na tabela, responda aos itens.
#
#-----------------------------------------------------------------------
rm(list = ls())
#-----------------------------------------------------------------------
set.seed(1)
sexo <- sample(c("Macho", "Fêmea"), size = 500, replace = T)
especie <- sample(c("A", "B", "C"), size = 500, replace = T)
dados <- data.frame(sexo,
especie)
dados
tabela <- addmargins(table(dados))
row.names(tabela)[3] <- "Soma"
colnames(tabela)[4] <- "Soma"
tabela
# 2. Qual a probabilidade de escolhermos ao acaso uma fêmea?
244/500
tabela[1,4]
tabela[3,4]
p_femea <- tabela[1,4]/tabela[3,4]
p_femea
246/500
tabela[2,4]/tabela[3,4]
1-p_femea
tabela
244/500
74/174
rmarkdown::render_site()
rmarkdown::render_site()
