main = 'Comparação entre grupos')
lines(density(female), col = '#8B0000', lwd = 2)
legend(x = "topright",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Male",
"Female"))
abline(v = mean(male), col = '#000080', lwd = 2, lty = 2)
abline(v = mean(female), col = '#8B0000', lwd = 2, lty = 2)
diferenca_observada <- mean(male) - mean(female)
diferenca_observada
data.frame(male, female)
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
male
sample(male, size = 10, replace = TRUE)
sample(male, size = 10, replace = TRUE)
sample(male, size = 10, replace = TRUE)
sample(male, size = 10, replace = TRUE)
sample(male, size = 10, replace = TRUE)
sample(male, size = 10, replace = TRUE)
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
mean(grupo1_bootstrap) - mean(grupo2_bootstrap)
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
mean(grupo1_bootstrap) - mean(grupo2_bootstrap)
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
for (i in 1:100000) {
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
diferencas_bootstrap[i] <- mean(grupo1_bootstrap) - mean(grupo2_bootstrap)
}
diferencas_bootstrap
## Construindo a distribuição amostral
hist(diferencas_bootstrap,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição amostral construída via bootstrap',
ylim = c(0, max(density(diferencas_bootstrap)$y) + 0.45*max(density(diferencas_bootstrap)$y)))
lines(density(diferencas_bootstrap), col = 1, lwd = 3)
## Obtendo estimativa pontual e intervalar
abline(v = mean(diferencas_bootstrap), col = 2, lwd = 4)
abline(v = quantile(diferencas_bootstrap,
probs = c(0.025, 0.975)),
col = 4, lwd = 5)
mean(diferencas_bootstrap)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
data.frame(male,female)
## Número de combinações possíveis de 20 tomados 10 a 10
choose(n = 20, k = 10)
## Número de combinações possíveis de 20 tomados 10 a 10
choose(n = 50, k = 25)
male
female
## Criando um vetor com os 20 elementos
grupo_geral <- c(male, female)
grupo_geral
indices <- 1:20
indices
sorteio <- sample(indices, size = 20, replace = FALSE)
sorteio
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
for (i in 1:100000) {
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
diferencas_aleatorizacao[i] <- mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
}
## Gerando as diferenças via aleatorização
diferencas_aleatorizacao <- c()
for (i in 1:100000) {
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
diferencas_aleatorizacao[i] <- mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
}
diferencas_aleatorizacao
## Distribuição amostral sob H0
hist(diferencas_aleatorizacao,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição sob H0 construída por aleatorização',
ylim = c(0, max(density(diferencas_aleatorizacao)$y) + 0.45*max(density(diferencas_aleatorizacao)$y)))
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
## Distribuição amostral sob H0
hist(diferencas_aleatorizacao,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição sob H0 construída por aleatorização',
ylim = c(0, max(density(diferencas_aleatorizacao)$y) + 0.45*max(density(diferencas_aleatorizacao)$y)))
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
## Confrontando com o valor observado
abline(v = diferenca_observada, col = 2, lwd = 4)
## Calculando o p-valor
2*(sum(diferencas_aleatorizacao >= diferenca_observada)/length(diferencas_aleatorizacao))
#----------------------------------------------------------------------
t.test(male, female)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
# Comparando as distribuições gerais
plot(density(diferencas_bootstrap),
xlim = c(min(c(diferencas_aleatorizacao, diferencas_bootstrap)),
max(c(diferencas_aleatorizacao, diferencas_bootstrap))),
ylim = c(0,max(c(density(diferencas_bootstrap)$y, density(diferencas_aleatorizacao)$y))),
col = '#000080', lwd = 2,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Comparação entre distribuições')
lines(density(diferencas_aleatorizacao), col = '#8B0000', lwd = 2)
legend(x = "topleft",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Distribuição amostral (bootstrap)",
"Distribuição sob H0 (aleatorização)"))
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
for (i in 1:100000) {
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
diferencas_bootstrap[i] <- median(grupo1_bootstrap) - median(grupo2_bootstrap)
}
## Construindo a distribuição amostral
hist(diferencas_bootstrap,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição amostral construída via bootstrap',
ylim = c(0, max(density(diferencas_bootstrap)$y) + 0.45*max(density(diferencas_bootstrap)$y)))
lines(density(diferencas_bootstrap), col = 1, lwd = 3)
## Obtendo estimativa pontual e intervalar
abline(v = mean(diferencas_bootstrap), col = 2, lwd = 4)
abline(v = quantile(diferencas_bootstrap,
probs = c(0.025, 0.975)),
col = 4, lwd = 5)
legend(x = "topright",
lwd = c(3,3),
col= c(2,4),
legend=c("Estimativa pontual",
"Estimativa intervalar"))
mean(diferencas_bootstrap)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
## Dados
male <- c(120.00, 107.00, 110.00, 116.00, 114.00,
111.00, 113.00, 117.00, 114.00, 112.00)
female <- c(110.00, 111.00, 107.00, 108.00, 110.00,
105.00, 107.00, 106.00, 111.00, 111.00)
## Média e desvio padrão dos grupos
round(c(mean(male), sd(male)), 2)
round(c(mean(female), sd(female)), 2)
## Densidades
plot(density(male),
xlim = c(min(c(male, female))-5, max(c(male, female))+5),
ylim = c(0,max(c(density(male)$y, density(female)$y))),
col = '#000080', lwd = 2,
xlab = 'Comprimento da mandíbula',
ylab = 'Densidade',
main = 'Comparação entre grupos')
lines(density(female), col = '#8B0000', lwd = 2)
legend(x = "topright",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Male",
"Female"))
abline(v = mean(male), col = '#000080', lwd = 2, lty = 2)
abline(v = mean(female), col = '#8B0000', lwd = 2, lty = 2)
diferenca_observada <- mean(male) - mean(female)
diferenca_observada
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
for (i in 1:100000) {
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
diferencas_bootstrap[i] <- mean(grupo1_bootstrap)/mean(grupo2_bootstrap)
}
## Construindo a distribuição amostral
hist(diferencas_bootstrap,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição amostral construída via bootstrap',
ylim = c(0, max(density(diferencas_bootstrap)$y) + 0.45*max(density(diferencas_bootstrap)$y)))
lines(density(diferencas_bootstrap), col = 1, lwd = 3)
## Obtendo estimativa pontual e intervalar
abline(v = mean(diferencas_bootstrap), col = 2, lwd = 4)
abline(v = quantile(diferencas_bootstrap,
probs = c(0.025, 0.975)),
col = 4, lwd = 5)
legend(x = "topright",
lwd = c(3,3),
col= c(2,4),
legend=c("Estimativa pontual",
"Estimativa intervalar"))
mean(diferencas_bootstrap)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
diferenca_observada <- mean(male) / mean(female)
diferenca_observada
## Dados
male <- c(120.00, 107.00, 110.00, 116.00, 114.00,
111.00, 113.00, 117.00, 114.00, 112.00)
female <- c(110.00, 111.00, 107.00, 108.00, 110.00,
105.00, 107.00, 106.00, 111.00, 111.00)
## Média e desvio padrão dos grupos
round(c(mean(male), sd(male)), 2)
round(c(mean(female), sd(female)), 2)
## Densidades
plot(density(male),
xlim = c(min(c(male, female))-5, max(c(male, female))+5),
ylim = c(0,max(c(density(male)$y, density(female)$y))),
col = '#000080', lwd = 2,
xlab = 'Comprimento da mandíbula',
ylab = 'Densidade',
main = 'Comparação entre grupos')
lines(density(female), col = '#8B0000', lwd = 2)
legend(x = "topright",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Male",
"Female"))
abline(v = mean(male), col = '#000080', lwd = 2, lty = 2)
abline(v = mean(female), col = '#8B0000', lwd = 2, lty = 2)
diferenca_observada <- mean(male) - mean(female)
diferenca_observada
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
for (i in 1:100000) {
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
diferencas_bootstrap[i] <- mean(grupo1_bootstrap) - mean(grupo2_bootstrap)
}
## Construindo a distribuição amostral
hist(diferencas_bootstrap,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição amostral construída via bootstrap',
ylim = c(0, max(density(diferencas_bootstrap)$y) + 0.45*max(density(diferencas_bootstrap)$y)))
lines(density(diferencas_bootstrap), col = 1, lwd = 3)
## Obtendo estimativa pontual e intervalar
abline(v = mean(diferencas_bootstrap), col = 2, lwd = 4)
abline(v = quantile(diferencas_bootstrap,
probs = c(0.025, 0.975)),
col = 4, lwd = 5)
legend(x = "topright",
lwd = c(3,3),
col= c(2,4),
legend=c("Estimativa pontual",
"Estimativa intervalar"))
mean(diferencas_bootstrap)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
## Número de combinações possíveis de 20 tomados 10 a 10
choose(n = 20, k = 10)
## Criando um vetor com os 20 elementos
grupo_geral <- c(male, female)
## Gerando as diferenças via aleatorização
diferencas_aleatorizacao <- c()
for (i in 1:100000) {
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
diferencas_aleatorizacao[i] <- mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
}
## Distribuição amostral sob H0
hist(diferencas_aleatorizacao,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição sob H0 construída por aleatorização',
ylim = c(0, max(density(diferencas_aleatorizacao)$y) + 0.45*max(density(diferencas_aleatorizacao)$y)))
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
## Confrontando com o valor observado
abline(v = diferenca_observada, col = 2, lwd = 4)
## Calculando o p-valor
2*(sum(diferencas_aleatorizacao >= diferenca_observada)/length(diferencas_aleatorizacao))
#----------------------------------------------------------------------
t.test(male, female)
# Comparando as distribuições gerais
plot(density(diferencas_bootstrap),
xlim = c(min(c(diferencas_aleatorizacao, diferencas_bootstrap)),
max(c(diferencas_aleatorizacao, diferencas_bootstrap))),
ylim = c(0,max(c(density(diferencas_bootstrap)$y, density(diferencas_aleatorizacao)$y))),
col = '#000080', lwd = 2,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Comparação entre distribuições')
lines(density(diferencas_aleatorizacao), col = '#8B0000', lwd = 2)
legend(x = "topleft",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Distribuição amostral (bootstrap)",
"Distribuição sob H0 (aleatorização)"))
## Dados
male <- c(120.00, 107.00, 110.00, 116.00, 114.00,
111.00, 113.00, 117.00, 114.00, 112.00)
female <- c(110.00, 111.00, 107.00, 108.00, 110.00,
105.00, 107.00, 106.00, 111.00, 111.00)
## Média e desvio padrão dos grupos
round(c(mean(male), sd(male)), 2)
round(c(mean(female), sd(female)), 2)
## Densidades
plot(density(male),
xlim = c(min(c(male, female))-5, max(c(male, female))+5),
ylim = c(0,max(c(density(male)$y, density(female)$y))),
col = '#000080', lwd = 2,
xlab = 'Comprimento da mandíbula',
ylab = 'Densidade',
main = 'Comparação entre grupos')
lines(density(female), col = '#8B0000', lwd = 2)
legend(x = "topright",
lwd = c(2,2),
col= c('#000080','#8B0000'),
legend=c("Male",
"Female"))
abline(v = mean(male), col = '#000080', lwd = 2, lty = 2)
abline(v = mean(female), col = '#8B0000', lwd = 2, lty = 2)
diferenca_observada <- mean(male) - mean(female)
diferenca_observada
t.test(male, female, var.equal = TRUE)
2*(1-pt(3.4843, df = 18))
t.test(male, female)
2*(1-pt(3.4843, df = 14.894))
# Estratégia não paramétrica: teste Wilcoxon/Mann-Whitney
wilcox.test(male, female)
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
## Gerando as reamostras e calculando a quantidade de interesse
diferencas_bootstrap <- c()
for (i in 1:100000) {
grupo1_bootstrap <- sample(male, size = 10, replace = TRUE)
grupo2_bootstrap <- sample(female, size = 10, replace = TRUE)
diferencas_bootstrap[i] <- mean(grupo1_bootstrap) - mean(grupo2_bootstrap)
}
## Construindo a distribuição amostral
hist(diferencas_bootstrap,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição amostral construída via bootstrap',
ylim = c(0, max(density(diferencas_bootstrap)$y) + 0.45*max(density(diferencas_bootstrap)$y)))
lines(density(diferencas_bootstrap), col = 1, lwd = 3)
abline(v = mean(diferencas_bootstrap), col = 2, lwd = 4)
abline(v = quantile(diferencas_bootstrap,
probs = c(0.025, 0.975)),
col = 4, lwd = 5)
legend(x = "topright",
lwd = c(3,3),
col= c(2,4),
legend=c("Estimativa pontual",
"Estimativa intervalar"))
mean(diferencas_bootstrap)
quantile(diferencas_bootstrap,
probs = c(0.025, 0.975))
bootstrap_0 <- diferencas_bootstrap - mean(diferencas_bootstrap)
# Comparando as distribuições gerais
plot(density(diferencas_bootstrap),
xlim = c(min(c(bootstrap_0, diferencas_bootstrap)),
max(c(bootstrap_0, diferencas_bootstrap))),
ylim = c(0,max(c(density(diferencas_bootstrap)$y, density(bootstrap_0)$y))),
col = '#000000', lwd = 2,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Comparação entre distribuições')
lines(density(bootstrap_0), col = '#C71585', lwd = 2)
legend(x = "topleft",
lwd = c(2,2),
col= c('#000000','#C71585'),
legend=c("Distribuição bootstrap",
"Distribuição bootstrap centrada em 0"))
abline(v = mean(diferencas_bootstrap), col = '#000000', lwd = 2, lty = 2)
abline(v = mean(bootstrap_0), col = '#C71585', lwd = 2, lty = 2)
## Calculando o p-valor
2*(sum(bootstrap_0 >= diferenca_observada)/length(bootstrap_0))
## Número de combinações possíveis de 20 tomados 10 a 10
choose(n = 20, k = 10)
## Criando um vetor com os 20 elementos
grupo_geral <- c(male, female)
## Gerando as diferenças via aleatorização
diferencas_aleatorizacao <- c()
for (i in 1:100000) {
indices <- 1:20
sorteio <- sample(indices, size = 20, replace = FALSE)
grupo1_aleatorizado <- grupo_geral[sorteio[1:10]]
grupo2_aleatorizado <- grupo_geral[sorteio[11:20]]
diferencas_aleatorizacao[i] <- mean(grupo1_aleatorizado) - mean(grupo2_aleatorizado)
}
## Distribuição amostral sob H0
hist(diferencas_aleatorizacao,
col = 0,
probability = T,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Distribuição sob H0 construída por aleatorização',
ylim = c(0, max(density(diferencas_aleatorizacao)$y) + 0.45*max(density(diferencas_aleatorizacao)$y)))
lines(density(diferencas_aleatorizacao), col = 1, lwd = 3)
## Confrontando com o valor observado
abline(v = diferenca_observada, col = 2, lwd = 4)
## Calculando o p-valor
2*(sum(diferencas_aleatorizacao >= diferenca_observada)/length(diferencas_aleatorizacao))
# Comparando as distribuições gerais
plot(density(diferencas_bootstrap),
xlim = c(min(c(diferencas_aleatorizacao, diferencas_bootstrap)),
max(c(diferencas_aleatorizacao, diferencas_bootstrap))),
ylim = c(0,max(c(density(diferencas_bootstrap)$y, density(diferencas_aleatorizacao)$y))),
col = '#006400', lwd = 2,
xlab = 'Diferenças',
ylab = 'Densidade',
main = 'Comparação entre distribuições')
lines(density(bootstrap_0), col = '#4B0082', lwd = 2)
lines(density(diferencas_aleatorizacao), col = '#FF4500', lwd = 2)
legend(x = "topleft",
lwd = c(2,2,2),
col= c('#000080','#363636','#8B0000'),
legend=c("Distribuição amostral (bootstrap)",
"Distribuição bootstrap centrada em 0",
"Distribuição sob H0 (aleatorização)"))
metodo1 <-
c(5.7, 3.4, 6.1, 5.9, 11.3,
11.9, 19.3, 14.4, 17.6, 8.7,
12.3, 9.1, 14.9, 15.8, 4.1,
10.4, 15.6, 1.0, 13.1, 7.7)
metodo2 <-
c(8.4, 6.9, 16.2, 9.5, 10.6,
3.2, 6.8, 5.9, 11.8, 17.4,
6.9, 13.8, 3.2, 9.6, 3.3,
9.2, 19.8, 10.6, 14.0, 14.6)
rnorm(49, 9, 2)
round(rnorm(49, 9, 2))
round(rnorm(49, 9, 2),1)
round(rnorm(49, 9, 2),1)
c(13.4, 9.6, 4.8, 8.6, 7.6 11.2, 9.1,
c(13.4, 9.6, 4.8, 8.6, 7.6 11.2, 9.1,
c(13.4, 9.6, 4.8, 8.6, 7.6 11.2, 9.1,
c(13.4, 9.6, 4.8, 8.6, 7.6 11.2, 9.1,
c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3 10.8, 8.0, 6.7, 6.3,
c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3, 10.8, 8.0, 6.7, 6.3,
11.2, 9.8 10.7, 8.1, 11.8, 9.7, 9.8,
c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3, 10.8, 8.0, 6.7, 6.3,
11.2, 9.8, 10.7, 8.1, 11.8, 9.7, 9.8,
7.6, 8.8, 9.7 10.2, 10.1, 6.7, 7.5,
c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3, 10.8, 8.0, 6.7, 6.3,
11.2, 9.8, 10.7, 8.1, 11.8, 9.7, 9.8,
7.6, 8.8, 9.7, 10.2, 10.1, 6.7, 7.5,
9.5, 9.3, 6.7, 4.6, 10.3, 7.1, 12.7,
10.4 10.7 11.1, 8.6, 10.6, 9.2, 9.6)
c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3, 10.8, 8.0, 6.7, 6.3,
11.2, 9.8, 10.7, 8.1, 11.8, 9.7, 9.8,
7.6, 8.8, 9.7, 10.2, 10.1, 6.7, 7.5,
9.5, 9.3, 6.7, 4.6, 10.3, 7.1, 12.7,
10.4, 10.7, 11.1, 8.6, 10.6, 9.2, 9.6)
tempos <- c(13.4, 9.6, 4.8, 8.6, 7.6, 11.2, 9.1,
8.5, 7.8, 10.3, 7.9, 5.5, 11.6, 10.2,
9.8, 8.6, 9.3, 10.8, 8.0, 6.7, 6.3,
11.2, 9.8, 10.7, 8.1, 11.8, 9.7, 9.8,
7.6, 8.8, 9.7, 10.2, 10.1, 6.7, 7.5,
9.5, 9.3, 6.7, 4.6, 10.3, 7.1, 12.7,
10.4, 10.7, 11.1, 8.6, 10.6, 9.2, 9.6)
set.seed(1)
valores <- round(rnorm(10, 13, 0.82), 1)
valores
c(12.5, 13.2, 12.3, 14.3, 13.3,
12.3, 13.4, 13.6, 13.5, 12.7)
set.seed(7)
tamanho <- round(rnorm(15, 100, sqrt(2)), 2)
tamanho
tamanho <-
c(103.23,  98.31,  99.02,  99.42,  98.63,
98.66, 101.06,  99.83, 100.22, 103.10,
100.50, 103.84, 103.23, 100.46, 102.68)
setwd("~/CE3012024")
rmarkdown::render_site()
