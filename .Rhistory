MASS::boxcox(x~1, lambda = seq(-1, 1, by = 0.01))
x <- exp(rnorm(n))
MASS::boxcox(x~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_0 <- exp(rnorm(n))
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,10000))    # Tamanho da amostra
n
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))
source("~/.active-rstudio-document", echo=TRUE)
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))
lambda_0.5 <- rnorm(n)^2
lambda_menos1 <- rnorm(n)
lambda_menos0.5 <- rnorm(n)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
rnorm(n)^2
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))
lambda_0.5 <- rnorm(n)^2
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2
x <- MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
x$x
x$y
lambda_menos1 <- 1/rnorm(n)
MASS::boxcox(lambda_menos1~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))
lambda_0.5 <- rnorm(n)^2
lambda_menos1 <- 1/rnorm(n)
lambda_menos1
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n,170,10))
lambda_0.5 <- rnorm(n)^2
lambda_menos1 <- 1/rnorm(n)
lambda_menos0.5 <- rnorm(n)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1
lambda_0 <- exp(rnorm(n,170,10))
lambda_0.5 <- rnorm(n,170,10)^2
lambda_menos1 <- 1/rnorm(n,170,10)
lambda_menos0.5 <- rnorm(n,170,10)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-10, 10, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-10, 10, by = 0.01))
(rnorm(n)^lambda)-1
lambda
lambda =0
(rnorm(n)^lambda)-1
rnorm(n)
lambda
(rnorm(n)^lambda)-1/lambda
source("~/.active-rstudio-document", echo=TRUE)
rnorm(100)^2
lambda_0 <- rnorm(n) # log(y)
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- rnorm(n) # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0 <- exp(rnorm(n)) # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
#lambda_0.5 <-       # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 10, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n)) # log(y)
lambda_0.5 <- rnorm(n)^2  # sqrt(y)
#lambda_menos1 <-    # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1 <- 1/rnorm(n)    # 1/y
MASS::boxcox(lambda_menos1~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1 <- 1/rnorm(n,100) # 1/y
MASS::boxcox(lambda_menos1~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
#lambda_menos0.5 <-  # 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
lambda_menos0.5 <-  # 1/sqrt(y)
(1/rnorm(n))^2
(1/rnorm(n))^2
lambda_menos0.5 <- (1/rnorm(n))^2# 1/sqrt(y)
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
lambda_menos0.5
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
lambda_0 <- exp(rnorm(n))   # log(y)
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
lambda_menos1 <- 1/rnorm(n,100) # 1/y
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n=100000
n <- round(runif(1,100,200))    # Tamanho da amostra
n=100000
lambda_0 <- exp(rnorm(n))   # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1 <- 1/rnorm(n,100) # 1/y
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
n=10000
lambda_0 <- exp(rnorm(n))   # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1 <- 1/rnorm(n,100) # 1/y
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
n <- round(runif(1,100,200))    # Tamanho da amostra
n=1000
lambda_0 <- exp(rnorm(n))   # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
lambda_0.5 <- rnorm(n)^2    # sqrt(y)
MASS::boxcox(lambda_0.5~1, lambda = seq(-1, 1, by = 0.01))
lambda_menos1 <- 1/rnorm(n,100) # 1/y
MASS::boxcox(lambda_menos1~1, lambda = seq(-100, 100, by = 0.01))
lambda_menos0.5 <- (1/rnorm(n,100))^2# 1/sqrt(y)
MASS::boxcox(lambda_menos0.5~1, lambda = seq(-100, 100, by = 0.01))
knitr::opts_chunk$set(echo = TRUE, eval = T)
dados <- read.csv2("estudantes.csv", header = T, dec = '.')
set.seed(1)
dados <- dados[sample(1:nrow(dados), 10),c(2,3,5,6)]
row.names(dados) <- NULL
names(dados) <- c("Turma", "Sexo", "Altura", "Peso")
dados$Altura <- dados$Altura*100
dados$Peso <- round(dados$Peso)
knitr::kable(dados)
knitr::kable(t(data.frame(`Turma` = "Qualitativa nominal",
"Sexo" = "Qualitativa nominal",
"Altura" = "Quantitativa contínua",
"Peso" = "Quantitativa contínua")))
knitr::kable(t(data.frame("Amostragem estratificada" = "Método probabilístico")))
tabela <- as.data.frame(table(dados$Turma))
tabela$Freq_r <- prop.table(table(dados$Turma))
names(tabela) <- c("Turma", "Frequência", "Frequência relativa")
knitr::kable(tabela)
knitr::kable(t(data.frame(R = "Um gráfico de barras pode ser usado para representar a tabela.")))
breaks <- hist(dados$Peso, plot = F)$breaks
faixas <- cut(dados$Peso,
breaks = breaks,
include.lowest = T,
right = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
names(tabela) <- c("Peso", "Frequência", "Frequência relativa")
knitr::kable(tabela)
setwd("~/CE3012024")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
posicao <- function(vetor){
table <- data.frame(n = sum(!is.na(vetor)),
Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('n', 'Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`PROVA 4` <- as.numeric(notas$`PROVA 4`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5')]) /5
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
menor_parcial <- pmin(
ifelse(
is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 4`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
pre_exame <- round((soma_parciais-menor_parcial)/4, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4 | notas$FALTAS > 15,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
#'PROVA 2',
#'PROVA 3',
'REMOTA 1'#,
#'REMOTA 2',
#'REMOTA 3',
#'REMOTA 4',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME",
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
pander::pander(posicao(notas$`PROVA 1`))
pander::pander(dispersao(notas$`PROVA 1`))
rmarkdown::render_site()
