(1.645*4.5)/1.5
((1.645*4.5)/1.5)^2
mean(c(6.4,
9.7,
0,
9.5))
(7.8+6.8+6.4)/3
(55.5+30)/2
?mad
library(googledrive)
library(googledrive)
PSDS_PATH <- file.path('~', 'statistics-for-data-scientists')
## Import state data
drive_download(as_id("0B98qpkK5EJembFc5RmVKVVJPdGc"), path=file.path(PSDS_PATH, 'data', 'state.csv'), overwrite=TRUE)
library(googledrive)
PSDS_PATH <- file.path('~', 'statistics-for-data-scientists')
## Import state data
drive_download(as_id("0B98qpkK5EJembFc5RmVKVVJPdGc"), path=file.path(PSDS_PATH, 'data', 'state.csv'), overwrite=TRUE)
?ascii
??ascii
10000000/2000
215-177
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
time
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
value <- runif(49, 10, 100)               # y Axis
group <- rep(LETTERS[1:7],times=7)        # group, one shape per group
data <- data.frame(time, value, group)
data
# stacked area chart
ggplot(data, aes(x=time, y=value, fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,3),each=3))  # x Axis
value <- runif(49, 10, 100)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,3),each=3))  # x Axis
value <- runif(0, 1, 100)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,3),each=3))  # x Axis
value <- runif(0, 1, 100)               # y Axis
value
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,3),each=3))  # x Axis
value <- runif(0, 1, 100)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# create data
time <- as.numeric(rep(seq(1,3),each=3))  # x Axis
time
value <- runif(0, 1, 100)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
group
rep(c(1:3,5))
# create data
time <- rep(c(1:3),5)  # x Axis
time
value <- runif(0, 1, 15)               # y Axis
group <- rep(LETTERS[1:5],times=3)        # group, one shape per group
data <- data.frame(time, value, group)
time
value
# create data
time <- rep(c(1:3),5)  # x Axis
value <- runif(15,0,1)               # y Axis
group <- rep(LETTERS[1:5],times=3)        # group, one shape per group
data <- data.frame(time, value, group)
data
# create data
time <- rep(c(1:3),5)  # x Axis
value <- runif(15,0,1)               # y Axis
group <- rep(LETTERS[1:5],times=3)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# create data
momento <- rep(c(1:5),5)  # x Axis
# create data
momento <- rep(c(1:5),5)  # x Axis
length(momento)
runif(25,0,0.3)
rep(LETTERS[1:5],times=5)
# create data
momento <- rep(c(1:5),5)  # x Axis
resposta <- runif(25,0,0.3)               # y Axis
grupo <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(momento, grupo, resposta)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# stacked area chart
ggplot(data, aes(x=momento,
y=resposta,
fill=grupo)) +
geom_area()
data <- data.frame(momento, grupo, resposta)
data
# stacked area chart
ggplot(data, aes(x=momento,
y=resposta,
fill=grupo)) +
geom_area()
data
# stacked area chart
ggplot(data, aes(x=momento,
y=resposta,
fill=grupo)) +
geom_area()
# create data
time <- rep(c(1:3),5)  # x Axis
value <- runif(15,0,1)               # y Axis
group <- rep(LETTERS[1:5],times=3)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# create data
time <- rep(c(1:5),5)  # x Axis
# create data
time <- rep(c(1:5),5)  # x Axis
value <- runif(25,0,0.3)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
time
value
group
# create data
time <- rep(c(1:3),5)  # x Axis
value <- runif(15,0,1)               # y Axis
group <- rep(LETTERS[1:5],times=3)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# create data
time <- rep(c(1:5),5)  # x Axis
value <- runif(25,0,1)               # y Axis
length(time)
length(value)
length(group)
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
data
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
value <- runif(49, 10, 100)               # y Axis
group <- rep(LETTERS[1:7],times=7)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time, y=value, fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
value <- runif(49, 0, 1)               # y Axis
group <- rep(LETTERS[1:7],times=7)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time, y=value, fill=group)) +
geom_area()
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
time
# create data
time <- as.numeric(rep(seq(1,4),each=4))  # x Axis
length(time)
7
# create data
time <- as.numeric(rep(seq(1,7),each=7))  # x Axis
length(time)
# create data
time <- as.numeric(rep(seq(1,4),each=4))  # x Axis
value <- runif(16, 0, 1)               # y Axis
time
value
# create data
time <- as.numeric(rep(seq(1,5),each=5))  # x Axis
value <- runif(25, 0, 1)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
length(group)
# stacked area chart
ggplot(data, aes(x=time, y=value, fill=group)) +
geom_area()
# create data
time <- as.numeric(rep(seq(1,5),each=5))  # x Axis
value <- runif(25, 0, 0.1)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,5),each=5))  # x Axis
value <- runif(25, 0, 0.1)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,5),each=5))  # x Axis
value <- runif(25, 0, 0.1)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# Packages
library(ggplot2)
library(dplyr)
# create data
time <- as.numeric(rep(seq(1,5),each=5))  # x Axis
value <- runif(25, 0, 0.1)               # y Axis
group <- rep(LETTERS[1:5],times=5)        # group, one shape per group
data <- data.frame(time, value, group)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area()
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1,
alpha = 0.2)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 2,
alpha = 0.2)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1,
alpha = 0.4)
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1,
alpha = 0.4) + theme_minimal()
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1,
alpha = 0.4) + theme_void()
# stacked area chart
ggplot(data, aes(x=time,
y=value,
fill=group)) +
geom_area(col = 1,
alpha = 0.4)
0.4*70
1/5
(1/5)*70
1/5
10*0.1375
10*0.1875
10*0.125
10*0.1125
10*0.4375
sum(
c(
10*0.1375,
10*0.1875,
10*0.125,
10*0.1125,
10*0.4375,))
sum(
c(
10*0.1375,
10*0.1875,
10*0.125,
10*0.1125,
10*0.4375))
sum(
c(
10*0.1375,
10*0.1875,
10*0.125,
10*0.1125,
10*0.4375,))
sum(
c(
10*0.1375,
10*0.1875,
10*0.125,
10*0.1125,
10*0.4375))
sum(
c(
1*0.1375,
1*0.1875,
1*0.125,
1*0.1125,
10*0.4375))
sum(
c(
1*0.1375,
1*0.1875,
1*0.125,
1*0.1125,
6*0.4375))
sum(
c(
2*0.1375,
2*0.1875,
2*0.125,
2*0.1125,
6*0.4375))
sum(
c(
5*0.1375,
5*0.1875,
5*0.125,
5*0.1125,
6*0.4375))
sum(
c(
5*0.1375,
5*0.1875,
5*0.125,
5*0.1125,
8*0.4375))
sum(
c(
3*0.1375,
5*0.1875,
3*0.125,
3*0.1125,
8*0.4375))
dbinom(1, 70, 1/5)
70*(1/5)
dbinom(14, 70, 1/5)
dbinom(0:70, 70, 1/5)
round(dbinom(0:70, 70, 1/5))
round(dbinom(0:70, 70, 1/5), 4)
dist <-
data.frame(Y = 0:70,
p = round(dbinom(0:70, 70, 1/5), 4))
plot(p~Y, dist)
plot(p~Y, dist, type = 'l')
plot(p~Y, dist, type = 'h')
dist
210/5
(210/5)*2
210+84
7210/5
7*210
1470/5
2024-2001
2019-1996
2018-1996
3.7-2.56
sqrt(1.14)
setwd("~/Área de Trabalho/atividade")
respostas <- read.csv("https://github.com/lineu96/CE3012024/blob/master/praticas-R/questionario.csv",
sep = ',',
encoding = 'UTF-8',
header = T)
nrow(respostas)
respostas
respostas <- read.csv("https://raw.githubusercontent.com/lineu96/CE3012024/master/praticas-R/questionario.csv",
sep = ',',
encoding = 'UTF-8',
header = T)
names(respostas) <-
c('data_hora', # Carimbo de data/hora
'escolaridade', # Qual é o seu grau de escolaridade?
'ano_ensino_medio', # Em que ano você finalizou o ensino médio?
'ensino_medio1', # Você cursou o ensino médio em escola pública ou particular?
'ensino_medio2', # Você cursou ensino médio tradicional ou profissionalizante?
'programacao_sn', # Você tem/teve contato com alguma linguagem de programação?
'programacao_list', # Quais linguagens de programação você já usou?
'software_sn', # Já utilizou algum software com funcionalidades estatísticas?
'software_list', # Qual(is) software(s) com funcionalidades estatísticas você usa ou já usou?
'importancia_estatistica', # Qual a importância que você atribui à Estatística?
'expectativa_pos_graduacao', # Qual a sua principal expectativa após a conclusão da graduação?
'sexo', # Qual o seu sexo?
'altura', # Qual a sua altura?
'peso', # Qual o seu peso?
'nascimento', # Qual a data do seu nascimento?
'emprego', # Qual das seguintes categorias descreve melhor sua situação de emprego?
'residencia', # Com quem você mora?
'irmaos', # Quantos irmãos você tem?
'origem', # Qual a sua origem?
'transporte', # Qual seu meio de transporte predominante que utilizava ou utilizaria para Universidade em atividades presenciais?
'tempo_ies', # Em média, quanto tempo você demora para chegar a Universidade?
'pet', # Possui animal de estimação?
'instrumento', # Toca algum instrumento musical?
'atv_fisica_reg', # Você pratica atividade física regularmente?
'atv_fisica_n', # Quantas vezes por semana você se exercita?
'atv_fisica_qual', # Qual atividade você pratica?
'kiki_bouba', # Observe as figuras abaixo. Uma delas se chama "Bouba" e a outra "Kiki". Quem é quem?
'quadrados' # Quantos quadrados há na figura?
)
head(dados)
head(respostas)
respostas <- read.csv("https://raw.githubusercontent.com/lineu96/CE3012024/master/praticas-R/questionario.csv",
sep = ',',
encoding = 'UTF-8',
header = T)
names(respostas) <-
c('data_hora', # Carimbo de data/hora
'escolaridade', # Qual é o seu grau de escolaridade?
'ano_ensino_medio', # Em que ano você finalizou o ensino médio?
'ensino_medio1', # Você cursou o ensino médio em escola pública ou particular?
'ensino_medio2', # Você cursou ensino médio tradicional ou profissionalizante?
'programacao_sn', # Você tem/teve contato com alguma linguagem de programação?
'programacao_list', # Quais linguagens de programação você já usou?
'software_sn', # Já utilizou algum software com funcionalidades estatísticas?
'software_list', # Qual(is) software(s) com funcionalidades estatísticas você usa ou já usou?
'importancia_estatistica', # Qual a importância que você atribui à Estatística?
'expectativa_pos_graduacao', # Qual a sua principal expectativa após a conclusão da graduação?
'sexo', # Qual o seu sexo?
'altura', # Qual a sua altura?
'peso', # Qual o seu peso?
'nascimento', # Qual a data do seu nascimento?
'emprego', # Qual das seguintes categorias descreve melhor sua situação de emprego?
'residencia', # Com quem você mora?
'irmaos', # Quantos irmãos você tem?
'origem', # Qual a sua origem?
'transporte', # Qual seu meio de transporte predominante que utilizava ou utilizaria para Universidade em atividades presenciais?
'tempo_ies', # Em média, quanto tempo você demora para chegar a Universidade?
'pet', # Possui animal de estimação?
'instrumento', # Toca algum instrumento musical?
'atv_fisica_reg', # Você pratica atividade física regularmente?
'atv_fisica_n', # Quantas vezes por semana você se exercita?
'atv_fisica_qual', # Qual atividade você pratica?
'kiki_bouba', # Observe as figuras abaixo. Uma delas se chama "Bouba" e a outra "Kiki". Quem é quem?
'quadrados' # Quantos quadrados há na figura?
)
ls()
respostas
class(respostas)
names(respostas)
respostas$quadrados
View(respostas)
setwd("~/CE3012024")
rmarkdown::render_site()
