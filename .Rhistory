notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`TRABALHO 1` <- as.numeric(notas$`TRABALHO 1`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5', 'TRABALHO 1')]) /6
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
menor_parcial <- pmin(
ifelse(
is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 4`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
pre_exame <- round((soma_parciais-menor_parcial)/4, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4 | notas$FALTAS > 15,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
#'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'TRABALHO 1'#,
#'REMOTA 4',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME",
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
names(notas)
names(notas)[15:(length(names(notas))-5)]
as.Date(names(notas)[15:(length(names(notas))-5)])
as.Date('29/02/2024')
names(notas)[15]
stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
c("'", "' "))
stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
c("'"))
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
c("'"))
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas1
datas2 <- datas1, c("' "))
datas2 <- stringr::str_remove(datas1, c("' "))
datas2
datas2 <- stringr::str_remove(datas1, c("'"))
datas2
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
as.Date(datas2)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- as.Date(datas2)
notas[15:(length(names(notas))-5)
notas[,15:(length(names(notas))-5)]
notas[,15:(length(names(notas))-5)]
is.na(notas[,15:(length(names(notas))-5)])
!(is.na(notas[,15:(length(names(notas))-5)]))
colSums(!(is.na(notas[,15:(length(names(notas))-5)])))
colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- as.Date(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2 <- subset(presencas, !(datas %in% sem_aula))
pander::pander(posicao(subset(presencas2, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas2, datas <= lubridate::today())$presencas))
presencas2
datas
datas2
lubridate::as_date(datas2)
?as_date(datas2)
lubridate::as_date(datas2, tz="UTC")
datas2
lubridate::dmy(datas2)
datas2
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2 <- subset(presencas, !(datas %in% sem_aula))
pander::pander(posicao(subset(presencas2, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas2, datas <= lubridate::today())$presencas))
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(n = sum(!is.na(vetor)),
Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('n', 'Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
#----------------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
#----------------------------------------------------------------------
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`PROVA 4` <- as.numeric(notas$`PROVA 4`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`TRABALHO 1` <- as.numeric(notas$`TRABALHO 1`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5', 'TRABALHO 1')]) /6
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
menor_parcial <- pmin(
ifelse(
is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 4`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
pre_exame <- round((soma_parciais-menor_parcial)/4, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4 | notas$FALTAS > 15,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
#'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'TRABALHO 1'#,
#'REMOTA 4',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME",
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas1
datas2 <- stringr::str_remove(datas1, c("'"))
datas2
datas <- lubridate::dmy(datas2)
datas
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
presencas
nrow(presencas)
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2 <- subset(presencas, !(datas %in% sem_aula))
presencas2
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
presencas
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2 <- subset(presencas, !(datas %in% sem_aula))
presencas2
View(presencas)
View(presencas2)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
sem_aula <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
sem_chamada <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-29',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas$datas
presencas$datas %in% sem_chamada
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
sem_chamada <- as.Date(c('2024-02-29',
'2024-03-01',
'2024-03-29',
'2024-04-01',
'2024-04-02',
'2024-04-19',
'2024-04-22',
'2024-04-23',
'2024-04-25')
)
presencas2 <- subset(presencas, !(datas %in% sem_aula))
pander::pander(posicao(subset(presencas2, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas2, datas <= lubridate::today())$presencas))
### Medidas de posição
posicao <- function(vetor){
table <- data.frame(n = sum(!is.na(vetor)),
Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
names(table) <- c('n', 'Mínimo', 'Q1', 'Média', 'Mediana', 'Q3', 'Máximo')
table
}
#----------------------------------------------------------------------
### Medidas de dispersao
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor, na.rm = T)),
Variancia = var(vetor, na.rm = T),
Desvio_padrao = sd(vetor, na.rm = T)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
names(table) <- c('Amplitude', 'Variância', 'Desvio padrão')
table
}
#----------------------------------------------------------------------
notas <- readxl::read_xls('notas-chamada.xls')
notas$`PROVA 1` <- as.numeric(notas$`PROVA 1`)
notas$`PROVA 2` <- as.numeric(notas$`PROVA 2`)
notas$`PROVA 3` <- as.numeric(notas$`PROVA 3`)
notas$`PROVA 4` <- as.numeric(notas$`PROVA 4`)
notas$`REMOTA 1` <- as.numeric(notas$`REMOTA 1`)
notas$`REMOTA 2` <- as.numeric(notas$`REMOTA 2`)
notas$`REMOTA 3` <- as.numeric(notas$`REMOTA 3`)
notas$`REMOTA 4` <- as.numeric(notas$`REMOTA 4`)
notas$`REMOTA 5` <- as.numeric(notas$`REMOTA 5`)
notas$`TRABALHO 1` <- as.numeric(notas$`TRABALHO 1`)
notas$`MÉDIA REMOTAS` <- rowSums(notas[,c('REMOTA 1', 'REMOTA 2',
'REMOTA 3', 'REMOTA 4',
'REMOTA 5', 'TRABALHO 1')]) /6
soma_parciais <- rowSums(notas[,c('PROVA 1', 'PROVA 2',
'PROVA 3', 'PROVA 4',
'MÉDIA REMOTAS')],
na.rm = T)
menor_parcial <- pmin(
ifelse(
is.na(notas$`PROVA 1`),0, notas$`PROVA 1`),
ifelse(is.na(notas$`PROVA 2`),0, notas$`PROVA 2`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 3`),
ifelse(is.na(notas$`PROVA 3`),0, notas$`PROVA 4`),
notas$`MÉDIA REMOTAS`,
na.rm = T)
pre_exame <- round((soma_parciais-menor_parcial)/4, 1)
notas$`NOTAS PRÉ EXAME` <- pre_exame
notas$`SITUAÇÃO PRÉ EXAME` <-
ifelse(notas$`NOTAS PRÉ EXAME` >= 7,
"APROVADO",
ifelse(notas$`NOTAS PRÉ EXAME` < 4 | notas$FALTAS > 15,
"REPROVADO",
"EXAME"))
notas$`NOTAS FINAIS` <-
ifelse(notas$`SITUAÇÃO PRÉ EXAME` == 'EXAME',
ifelse(is.na(notas$EXAME),
notas$`NOTAS PRÉ EXAME`/2,
round((notas$`NOTAS PRÉ EXAME`+ notas$EXAME)/2, 2)),
notas$`NOTAS PRÉ EXAME`)
notas$`SITUAÇÃO FINAL` <-
ifelse(notas$`NOTAS FINAIS` >= 5,
"APROVADO",
"REPROVADO")
DT::datatable(notas[,c('GRR',
'FALTAS',
'PROVA 1',
'PROVA 2',
#'PROVA 3',
'REMOTA 1',
'REMOTA 2',
'REMOTA 3',
'TRABALHO 1'#,
#'REMOTA 4',
#"NOTAS PRÉ EXAME",
#"SITUAÇÃO PRÉ EXAME",
#"EXAME",
#"NOTAS FINAIS",
#"SITUAÇÃO FINAL"
)],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
datas1 <- stringr::str_remove(names(notas)[15:(length(names(notas))-5)],
"'")
datas2 <- stringr::str_remove(datas1, c("'"))
datas <- lubridate::dmy(datas2)
presencas <- colSums(is.na(notas[,15:(length(names(notas))-5)]))
presencas <- data.frame(datas = datas,
presencas = presencas)
presencas
pander::pander(posicao(subset(presencas, datas <= lubridate::today())$presencas))
pander::pander(dispersao(subset(presencas, datas <= lubridate::today())$presencas))
?DT::datatable
rmarkdown::render_site()
matriz <- matrix(nrow=1000, ncol=4)
for (i in 1:nrow(matriz)) {
matriz[i,] <- sample(c(0.2, 0.8), 4, replace = T)
}
matriz <- unique(matriz)
matriz
matriz[,1]*matriz[,2]*matriz[,3]*matriz[,4]
cbind(matriz, matriz[,1]*matriz[,2]*matriz[,3]*matriz[,4])
ggplot(data = subset(presencas, datas <= lubridate::today()),
aes(x=datas, y=presencas)) +
geom_line() +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 71,
lwd = 1.5,
col = 2,
lty = 2) +
ylab("Nº de presentes") +
xlab("Data") +
ylim(c(0,71))+
ggtitle("Série de presenças")+
theme_classic() +
theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
ggplot(data = subset(presencas, datas <= lubridate::today()),
aes(x=datas, y=presencas)) +
geom_line() +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 71,
lwd = 1.5,
col = 2,
lty = 2) +
ylab("Nº de presentes") +
xlab("Data") +
#ylim(c(0,71))+
ggtitle("Série de presenças")+
theme_classic() +
theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
rmarkdown::render_site()
