media_peso = mean(dados$peso)
#as médias de altura e peso são:
media_altura
media_peso
#os desvios padrões de altura e peso são:
sd(dados$altura)
sd(dados$peso)
#6)
dados$altura
dados$peso
coeficiente_vari_altura = sd(dados$altura)/media_altura
coeficiente_vari_peso = sd(dados$peso)/media_peso
coeficiente_vari_altura
coeficiente_vari_peso
#7)
barplot(tabelapeso, space = 0)
#8)
dados$altura
boxplot(dados$altura)
boxplot(dados$altura,  horizontal = T)
quartis = quantile(dados$altura)
media_2quartil = median(dados$altura)
quartis
media_2quartil
#R:O boxplot apresenta uma leve assimetria a esquerda, pois seus dados se concentram em valores mais altos
#R:os dados não apresentam valores atipicos
#9)
turma = dados$turma
sexo = dados$sexo
tabela_dupla_entrada <- table(turma, sexo)
print(tabela_dupla_entrada)
#10)
dados$altura
dados$sexo
boxplot(altura ~ sexo, data = dados)
plot(peso ~ altura, data = dados)
#11)
turma = dados$turma
sexo = dados$sexo
tabela <- table(turma, sexo)
total <- sum(tabela)
row_sum <- rowSums(tabela)
col_sum <- colSums(tabela)
expected <- outer(row_sum, col_sum) / total
qui_quadrado <- sum((tabela - expected)^2 / expected)
print(qui_quadrado)
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
fa <- table(dados$turma)
fr <- prop.table(fa) #frequencia relativa
tabela_freq <- data.frame(
turma = names(fa),
fa = as.numeric(fa),
fr = as.numeric(fr)
)
total <- c("Total", sum(fa), sum(fr), "")
tabela_freq <- rbind(tabela_freq, total)
#Criando tabela
tabela_freq
dados$peso #Pegando os pesos dos dados
breaks <- seq(40,90,10) #Definindo faixas de tamanho 10
classes <- cut(dados$peso,
breaks = breaks,
include.lowest = TRUE,
right = FALSE)
#Definindo as classes
table(classes)
tabela4 <- table(classes)
tabela4
sum(tabela4)
#A faixa modal é [60,70)
tabela5 = data.frame(faixas=names(tabela4),
freq = as.vector(tabela4))
tabela5
tabela5[6,1] <- "TOTAL"
tabela5[6,2] <- sum(tabela4)
tabela5
mean(dados$altura) #media altura
mean(dados$peso) #media peso
sd(dados$altura) #desvio padrão altura
sd(dados$peso) #desvio padrão peso
media_altura <-mean(dados$altura)
mean(dados$altura)
desviop_altura <-sd(dados$altura)
sd(dados$altura)
cv <-(desviop_altura / media_altura)*100
cv   #obtendo coeficiente de variação
media_peso <-mean(dados$peso)
mean(dados$peso)
desviop_peso <-sd(dados$peso)
sd(dados$peso)
cv <-(desviop_peso / media_peso)*100
cv #obtendo coeficiente de variação
barplot(tabela4, space = 0)
dados$alturas
quantile(dados$altura)
q1 <- quantile(dados$altura)[2] #Q1
q1
q2 <-median(dados$altura) #Q2
q2
q3 <-quantile(dados$altura)[4] #Q3
q3
aiq <- (q3-q1)
aiq
amplitude_inf <- (q1-1.5*aiq)
amplitude_inf
amplitude_sup <- (q3+1.5*aiq)
amplitude_sup
boxplot(dados$altura, horizontal = TRUE)
tabela6 <- table(dados$sexo,dados$turma)
tabela6
addmargins(tabela6)
boxplot(altura ~ sexo, data = dados,
main = "Boxplot da Altura por Sexo",
xlab = "Sexo", ylab = "Altura")
plot(peso ~ altura, data = dados,
xlab = 'altura, ylab = peso')
tabela6
tabela7 <-addmargins(tabela6) #fazendo a tabela de dupla entrada com soma.
tabela7
chi <- chisq.test(tabela7) #Qui-Quadrado.
chi
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
dados
#Questão 3
dados$turma #Pegando todas as informações das turmas dos dados
#Questão 3
dados$turma #Pegando todas as informações das turmas dos dados
table(dados$turma) #Fazendo uma tabela de frequência absoluta das turmas
tabela1 <- table(dados$turma) #Atribuindo uma varíavel para a tabela para facilitar
tabela1
sum(tabela1) #Soma das frequências absolutas
prop.table(tabela1) #Fazendo uma tabela de frequências relativas das turmas
tabela2 <- prop.table(tabela1) #Atribuindo uma varíavel para a tabela para facilitar
tabela2
sum(tabela2) #Soma das frequências relativas
tabela3 = data.frame(turma = names(tabela1),  #Criando uma tabela com as turmas, f absoluta e f relativa
freq = as.vector(tabela1),
freq_r = as.vector(tabela2))
tabela3
tabela3[3,1] <- "TOTAL" #Definindo o que deve estar em cada linha e coluna da tabela
tabela3[3,2] <- sum(tabela1)
tabela3[3,3] <-sum(tabela2)
names(tabela3) #Mudandos os nomes na tabela
names(tabela3) <- c("Turma",
"Freq. absoluta",
"Freq. relativa")
tabela3
#Questão 4
dados$peso #Pegando os pesos dos dados
breaks <- seq(40,90,10) #Definindo faixas de tamanho 10
classes <- cut(dados$peso,
breaks = breaks,
include.lowest = TRUE,
right = FALSE)
#Definindo as classes
table(classes)
tabela4 <- table(classes)
tabela4
sum(tabela4)
#A faixa modal é [60,70)
tabela5 = data.frame(faixas=names(tabela4),
freq = as.vector(tabela4))
tabela5
tabela5[6,1] <- "TOTAL"
tabela5[6,2] <- sum(tabela4)
tabela5
#Questão 5
mean(dados$altura) #Media das alturas
mean(dados$peso) #Media dos pesos
sd(dados$altura) #Desvio padrao das alturas
sd(dados$peso) #Desvio padrao dos pesos
#Questão 6
#Altura
dados$altura #Dados das alturas
altura <- dados$altura #Criando uma varíavel com os dados das alturas para facilitar
sd(altura) #Desvio padrão das alturas
dp_alt <- sd(altura) #Criando uma varíavel do desvio padrão para facilitar
mean(altura) #Média das alturas
media_altura <- mean(altura) #Criando uma varíavel para média para facilitar
coef_varia_alt <- (dp_alt / media_altura)*100 #Coeficiente de variação das alturas
coef_varia_alt
#Peso
dados$peso #Dados dos pesos
peso <- dados$peso #Criando uma varíavel com os dados dos pesos para facilitar
sd(peso) #Desvio padrão dos pesos
dp_pesos <-sd(peso) #Criando uma varíavel do desvio padrão para facilitar
mean(peso) #Média dos pesos
media_pesos <- mean(peso) #Criando uma varíavel para média para facilitar
coef_varia_pesos <- (dp_pesos / media_pesos) *100 #Coeficiente de variação dos pesos
coef_varia_pesos
#Questão 7
tabela4
barplot(tabela4, space =0 )
#Questão 8
dados$altura #Pegando todos as alturas dos dados
boxplot(dados$altura) #Fazendo o boxplot
median(dados$altura) #Obtendo o segundo quartil
q2 <- median(dados$altura)
q2
calculo_q1 = c(157,160,165,167,170) #Criando um vetor para calcular a mediana da primeira metade dos dados
median(calculo_q1) #Obtendo o primeiro quartil
q1 <- median(calculo_q1)
q1
calculo_q3 = c(170,176,178,180,185) #Criando um vetor para calcular a mediana da segunda metade dos dados
median(calculo_q3) #Obtendo o terceiro quartil
q3 <- median(calculo_q3)
q3
aiq<- (q3 - q1) #Obtendoa amplitude interquartilica
aiq
amp_inferior <- (q1-1.5*aiq) #Obtendo limite inferior
amp_inferior
amp_superior <- (q3+1.5*aiq) #Obtendo limite superior
amp_superior
#Questão 9
table(dados$sexo,dados$turma)
tabela6 <- table(dados$sexo,dados$turma)
addmargins(tabela6)
tabela7 <- addmargins(tabela6)
tabela7
boxplot(altura ~ sexo, data = dados,
main = "Boxplot da Altura por Sexo",
xlab = "Sexo", ylab = "Altura")
plot(peso ~ altura, data = dados,
xlab = 'altura, ylab = peso')
#Questão 11
tabela7
chi <- chisq.test(tabela7)
chi
dados <-
data.frame(
turma = c("A", "B", "A", "B", "A", "B", "A", "A", "B", "A"),
sexo = c("M", "F", "F", "F", "F", "M", "M", "M", "F", "F"),
altura = c(185, 170, 160, 167, 157, 176, 178, 180, 165, 170),
peso = c(81, 60, 60, 58, 49, 75, 68, 85, 56, 60)
)
# calculando as frequências absolutas e relativas gerais.
# função table e prop.table para os cálculos, respectivamente.
frequencia_abs <- table(dados$turma)
frequencia_abs
frequencia_relat <- prop.table(frequencia_abs)
frequencia_relat
# localizando as turmas na tabela.
variavel <- c("A", "B")
# tabela
tabela1 <- data.frame(
variavel, as.vector(frequencia_abs),
as.vector(frequencia_relat)
)
names(tabela1) <- c("Turmas","frequência absoluta", "frequência relativa")
tabela1
# criar as faixas da variável peso.
limites <- c(40, 49, 59, 69, 79, 90)
faixas <- cut(dados$peso, breaks = limites)
freq <- table(faixas)
relativa <- prop.table(as.vector(freq))
relativa
faixas <- c(" [40-50)","[50-60)","[60-70)","[70-80)","[80-90] ")
faixas
#  montar a tabela de frequência.
tabela2 <- data.frame(faixas, as.vector(freq), as.vector(relativa))
names(tabela2) <- c("Faixas","frequencia absoluta", "frequencia relativa")
tabela2
# calcular a média e desvio
mediaaltura = mean(dados$altura)
mediapeso = mean(dados$peso)
desvioaltura = sd(dados$altura)
desviopeso = sd(dados$peso)
tabela3 <- data.frame(mediaaltura , mediapeso, round(desvioaltura, 2),
round(desviopeso, 2))
names(tabela3) <- c("media altura","media peso",
"desvio altura", "desvio peso")
tabela3
#calcular coeficiente de variação
cv_altura <- desvioaltura/mediaaltura
cv_peso <- desviopeso/mediapeso
tabela4 <- data.frame(
round(cv_altura, 3) , round(cv_peso, 3)
)
names(tabela4) <- c("cv altura", "cv peso")
tabela4
limites <- c(40, 49, 59, 69, 79, 90)
histograma <- hist(dados$peso, breaks = limites,
xlab = "Peso em kg",
ylab = "Frequência absoluta",
freq = TRUE ,
main = "Histograma dos pesos")
histograma
quartis <- quantile(dados$altura, prob = c(0.25, 0.5, 0.75))
quartis
boxplot <- boxplot(dados$altura, horizontal = TRUE)
boxplot
#calcular a amplitude interquartilica e definir
# os limites para a distancia padrão de 1,5
AIQ <- 177.5 - 165.5
limiteinferior <- 165.5 - 1.5*AIQ
limitesuperior <- 177.5 + 1.5*AIQ
tabela5 <- data.frame(limiteinferior, limitesuperior)
names(tabela5) <- c("limite inf","limite sup")
tabela5
var1 <- c(dados$sexo)
var2 <- c(dados$turma)
tabela6 <- table(var1, var2)
tabela6
tabela7 <- chisq.test(tabela6)
tabela7
1 - dbinom(0, size=4, prob=1/5)
dbinom(1, size=4, prob=1/5)+dbinom(2, size=4, prob=1/5) + dbinom(3, size=4, prob=1/5)+dbinom(4, size=4, prob=1/5)
sum(dbinom(1:4, size=4, prob=1/5))
moeda <- c('cara', 'coroa')
dado <- 1:6
combn(moeda, dado)
expand.grid(moeda, dado)
knitr::kable(data.frame(
Eventos = c('C: cara',
'K: coroa',
'1: face 1',
'2: face 2',
'2: face 2',
'2: face 2',
'2: face 2',
'2: face 2')))
knitr::kable(data.frame(
Eventos = c('C: cara',
'K: coroa',
'1: face 1',
'2: face 2',
'2: face 3',
'2: face 4',
'2: face 5',
'2: face 6')))
moeda <- c('C', 'K')
dado <- 1:6
expand.grid(moeda, dado)
omega <- expand.grid(moeda, dado)
class(omega)
paste0(omega[,1],',',omega[,2])
knitr::kable(data.frame(
$\Omega$ = paste0(omega[,1],',',omega[,2]))))
knitr::kable(data.frame(
$\Omega$ = paste0(omega[,1],',',omega[,2])))
omega <- expand.grid(moeda, dado)
paste0(omega[,1],omega[,2])
paste0(omega[,1],',',omega[,2])
knitr::kable(data.frame(
$\Omega$ = paste0(omega[,1],',',omega[,2])))
knitr::kable(data.frame(
$\Omega$ = paste0(omega[,1],',',omega[,2])))
knitr::kable(data.frame(
Omega = paste0(omega[,1],',',omega[,2])))
2/12
1/6
7/12
knitr::opts_chunk$set(echo = TRUE, eval = T)
knitr::kable(data.frame(
Resposta =
c('P(vitoria) = 6/12 + 2/12 - 1/12 = 7/12 = 0,58'),
c('P(vitoria) = 6/12 + 2/12 - 1/12 = 7/12 = 0,58')))
knitr::kable(data.frame(
Resposta =
c('P(C|1) = 1/2)',
c('P(1|C) = 1/6'))))
knitr::kable(data.frame(
Resposta =
c('P(C|1) = 1/2',
c('P(1|C) = 1/6'))))
paste0(omega[,1],',',omega[,2])
knitr::kable(data.frame(
Eventos = c('C: cara',
'K: coroa',
'1: face 1',
'2: face 2',
'2: face 3',
'2: face 4',
'2: face 5',
'2: face 6',
'',
'',
'',
''),
Omega = paste0(omega[,1],',',omega[,2])))
knitr::opts_chunk$set(echo = TRUE, eval = F)
urna <- c('B', 'V')
dado <- 1:6
omega <- expand.grid(urna, dado)
knitr::kable(t(data.frame(a = 'C contra, A a favor, O sem opinião, F sexo feminino, M: sexo masculino, N noturno, D: ser do diurno',
b = '$P(M \\cap O) = \\frac{8 + 1}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{9}{74} = 0.122$',
c = '$P(F \\cap C) = \\frac{6}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{6}{74} = 0.081$',
d = '$P(A | N) = \\frac{8 + 10}{4+8+2+12+10+1} = \\frac{18}{37} = 0.486$',
e = '$P(O | F) = \\frac{2 + 2}{2+8+2+4+8+2} = \\frac{4}{26} = 0.154$'
)))
knitr::kable(t(data.frame(a = 'C contra, A a favor, O sem opinião, F sexo feminino, M: sexo masculino, N noturno, D: ser do diurno',
b = '$P(M \\cap O) = \\frac{8 + 1}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{9}{74} = 0.122$',
c = '$P(F \\cap C) = \\frac{6}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{6}{74} = 0.081$',
d = '$P(A | N) = \\frac{8 + 10}{4+8+2+12+10+1} = \\frac{18}{37} = 0.486$',
e = '$P(O | F) = \\frac{2 + 2}{2+8+2+4+8+2} = \\frac{4}{26} = 0.154$'
)))
knitr::kable(t(data.frame(a = 'C contra, A a favor, O sem opinião, F sexo feminino, M: sexo masculino, N noturno, D: ser do diurno',
b = '$P(M \\cap O) = \\frac{8 + 1}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{9}{74} = 0.122$',
c = '$P(F \\cap C) = \\frac{6}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{6}{74} = 0.081$',
d = '$P(A | N) = \\frac{8 + 10}{4+8+2+12+10+1} = \\frac{18}{37} = 0.486$',
e = '$P(O | F) = \\frac{2 + 2}{2+8+2+4+8+2} = \\frac{4}{26} = 0.154$'
)))
30+45
30+45-100
1-0.5714
urna1 <- c('B', 'V')
urna2 <- 1:6
omega <- expand.grid(urna1, urna2)
urna1 <- c('B', 'V')
urna2 <- 1:6
omega <- expand.grid(urna1, urna2)
knitr::kable(data.frame(
Eventos = c('B: branca',
'V: vermelha',
'1: bola 1',
'2: bola 2',
'2: bola 3',
'2: bola 4',
'2: bola 5',
'2: bola 6',
'',
'',
'',
''),
Omega = paste0(omega[,1],',',omega[,2])))
urna1 <- c('B', 'V')
urna2 <- 1:6
omega <- expand.grid(urna1, urna2)
knitr::kable(data.frame(
Eventos = c('B: branca',
'V: vermelha',
'1: bola 1',
'2: bola 2',
'3: bola 3',
'4: bola 4',
'5: bola 5',
'6: bola 6',
'',
'',
'',
''),
Omega = paste0(omega[,1],',',omega[,2])))
knitr::kable(data.frame(
Resposta = c('P(vitoria) = 2/12 = 1/6 = 0,17')))
knitr::kable(data.frame(
Resposta = c('P(vitoria) = 6/12 + 2/12 - 1/12 = 7/12 = 0,58')))
knitr::kable(data.frame(
Resposta =
c('P(B|5) = 1/2',
c('P(5|B) = 1/6'))))
knitr::kable(data.frame(
Resposta =
c('Não existem elementos em comum, portanto são mutuamente exclusivos.',
c('O lançamento de um não altera o lançamento do outro, portanto são independentes.'))))
knitr::kable(data.frame(Resposta = c('$P(A \\cup B) = P(A) + P(B) - P(A \\cap B)$',
'$0.6 = 0.3 + 0.5 - P(A \\cap B)$',
'p = 0.2')))
knitr::kable(t(data.frame(a = 'C contra, A a favor, O sem opinião, F sexo feminino, M: sexo masculino, N noturno, D: ser do diurno',
b = '$P(M \\cap O) = \\frac{8 + 1}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{9}{74} = 0.122$',
c = '$P(F \\cap C) = \\frac{6}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{6}{74} = 0.081$',
d = '$P(A | N) = \\frac{8 + 10}{4+8+2+12+10+1} = \\frac{18}{37} = 0.486$',
e = '$P(O | F) = \\frac{2 + 2}{2+8+2+4+8+2} = \\frac{4}{26} = 0.154$'
)))
knitr::kable(t(data.frame(a = 'C contra, A a favor, O sem opinião, F sexo feminino, M: sexo masculino, N noturno, D: ser do diurno',
b = '$P(M \\cap O) = \\frac{8 + 1}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{9}{74} = 0.122$',
c = '$P(F \\cap C) = \\frac{6}{2+8+2+8+9+8+4+8+2+12+10+1} = \\frac{6}{74} = 0.081$',
d = '$P(A | N) = \\frac{8 + 10}{4+8+2+12+10+1} = \\frac{18}{37} = 0.486$',
e = '$P(O | F) = \\frac{2 + 2}{2+8+2+4+8+2} = \\frac{4}{26} = 0.154$'
)))
knitr::kable(data.frame(
Eventos = c('F1: fornecedor I',
'F2: fornecedor II',
'F3: fornecedor III',
'D: com defeito',
'$D^c$: sem defeito'),
Probabilidades = c('P(F1) = 0,3',
'P(F2) = 0,45',
'P(F3) = 0,25',
'P(D|F1) = 0,01',
'P(D|F2) = 0,02',
'P(D|F3) = 0,015')))
-15-(-0.5)
-0.5-15
-0.5-.15
0.5-0.15
(0.5-0.15)*1/2
((0.5-0.15)*1/2)
((0.5-0.15)*1/2)
(1/2)+0.01
((0.5-0.15)*1/2)/(1/2)+0.01
0.51-0.5
(0.51-0.5)*1
(0.51-0.5)*1 + 0.5
(1/2)+0.01
((0.5-0.15)*1/2)/((0.51-0.5)*1 + 0.5)
numerador <- ((0.5-0.15)*1/2)
denominador <- ((0.51-0.5)*1 + 0.5)
numerador/denominador
setwd("~/CE3012024")
rmarkdown::render_site()
