size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P2.presencial,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P2.presencial,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Prova 2 - presencial")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P2.presencial, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
setwd("~/ce301")
rmarkdown::render_site()
\endColumns
0,05/2
0.05/2
1-0.05/2
knitr::opts_chunk$set(echo = TRUE, eval = T)
knitr::kable(data.frame(
Resposta = paste0('P(Y = 12) =',dbinom(12,12,0.8))))
paste0('P(Y = 12) =',dbinom(12,12,0.8))))
paste0('P(Y = 12) =',dbinom(12,12,0.8)))
paste0('P(Y = 12) =',dbinom(12,12,0.8))
paste0('1- P(Y = 12) - P(Y = 11) =',1 - dbinom(12,12,0.8) - dbinom(11,11,0.8)
)
paste0('1- P(Y = 0) =',1 - dbinom(0,12,0.8)
)
dbinom(0,12,0.8)
knitr::kable(data.frame(
Resposta = paste0('1- P(Y = 0) =',1 - dbinom(0,12,0.8))))
qnorm(0.9, 15,2)
PF1 <- 0.2
PF2 <- 0.3
PF3 <- 0.5
PAdadoF1 <- 0.2
PAdadoF2 <- 0.05
PAdadoF3 <- 0.02
c(PF1, PF2, PF3)
c(PAdadoF1, PAdadoF2, PAdadoF3)
c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3)
sum(c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3))
PA <- sum(c(PF1, PF2, PF3) * c(PAdadoF1, PAdadoF2, PAdadoF3))
PF1dadoA <- (PAdadoF1*PF1)/PA
PF1dadoA
PF2dadoA <- (PAdadoF2*PF2)/PA
PF2dadoA
PF3dadoA <- (PAdadoF3*PF3)/PA
PF3dadoA
PF1dadoA + PF2dadoA + PF3dadoA
0,.61+0.23+0.15
0.61+0.23+0.15
1-0.615-0.231
corr.f <-
function(nA, nB, r, x){
list(1-phyper(x-1, m=nB, n=nA, k=r), c(m=nB, n=nA), c(min = max(c(0, r+nB-(nA+nB))), max = min(c(r,nB))))
}
corr.f(9,6)
corr.f(9,6,8,3)
rmarkdown::render_site()
posicao <- function(vetor){
table <- data.frame(Minimo = quantile(vetor, na.rm = T)[1],
Quartil_1 = quantile(vetor, na.rm = T)[2],
Media = mean(vetor, na.rm = T),
Mediana = quantile(vetor, na.rm = T)[3],
Quartil_3 = quantile(vetor, na.rm = T)[4],
Maximo = quantile(vetor, na.rm = T)[5])
row.names(table) <- NULL
table
}
dispersao <- function(vetor){
table <- data.frame(Amplitude = diff(range(vetor)),
Variancia = var(vetor),
Desvio_padrao = sd(vetor)#,
#Coef_variacao = 100*sd(vetor)/mean(vetor)
)
table
}
notas <- read.csv("notas-faltas-ce301.csv", dec = ',', sep = ';')
notas <- read.csv("notas-faltas-ce301.csv", dec = ',', sep = ';')
names(notas)
DT::datatable(notas[,c('GRR', 'FALTAS',
'P1', 'P2', 'P3',
'MÉDIA', 'SITUAÇÃO')],
class = 'cell-border stripe',
rownames = F,
#filter = 'top',
editable = T
)
# Análise das notas {.tabset .tabset-fade .tabset-pills}
## P1
<center>
```{r, comment=FALSE, message=FALSE, fig.align='center', warning=TRUE, echo = FALSE, warning=FALSE}
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P1,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P1,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Nota 1\n 80% P1 presencial / 20% P1 remota")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P1, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
pander::pander(posicao(notas$P3))
library(ggplot2)
library(ggpubr)
p1 = ggplot(notas) +
geom_histogram(aes(x=P3,
y=..density..),
position="identity",
col = 1,
lwd = 1,
breaks = seq(0,10,0.5)) +
geom_density(aes(x=P3,
y=..density..),
col = 4,
lwd = 1) +
ylab("Densidade") +
xlab("") +
ggtitle("Nota 3\n 80% P2 presencial / 20% P2 remota")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
text = element_text(size=15))
p2 = ggplot(data = notas,
mapping = aes(y=P3, x='1')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
stat_summary(fun.y=mean,
geom="point",
shape=20,
size=3,
color="red",
fill="red")+
ylab("Notas") +
xlab("") +
#ggtitle("Titulo")+
theme_classic() + theme(legend.position = 'none',
plot.title = element_text(family = "Helvetica",
face = "bold",
size = (20),
hjust = 0.5),
axis.title = element_text(face = "bold",
size = 15),
axis.text.y=element_blank(),
text = element_text(size=15)) +coord_flip()
ggarrange(p1, p2,
heights = c(2, 1),
align = "hv",
ncol = 1,
nrow = 2)
rmarkdown::render_site()
setwd("~/Downloads")
# Carrega pacotes
library(DBI)
library(duckdb)
library(dplyr)
install.packages("DBI")
install.packages("duckdb")
# Carrega pacotes
library(DBI)
library(duckdb)
library(dplyr)
con <- DBI::dbConnect(duckdb::duckdb(),
dbdir="consultas.duckdb")
c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1)
summary(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
table(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
hist(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
hist(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))$breaks
knitr::opts_chunk$set(echo = TRUE, eval = T)
tabela <- data.frame(Gráfico = c('Gráfico de barras.',
'Histograma.',
'Gráfico de mosaico.' ,
'Diagrama de dispersão.' ,
'Boxplot para níveis de um fator.'),
Descrição = c('Visualização que permite avaliar o efeito dos níveis de uma variável categórica sobre uma variável numérica.',
'Gráfico para representar uma variável quantitativa contínua.',
'Gráfico usado para representar uma variável qualitativa.',
'Gráfico para representar 2 variáveis quantitativas simultaneamente.',
'Gráfico usado para representar duas variáveis categóricas.'))
knitr::kable(tabela)
summary
summary
summary(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
sd(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
length(c(6.2, 5.4, 6.7, 5.8, 4.5, 4.7,
7.1, 6.3, 6.5, 3.4, 5.6, 3.1,
6.4, 5.0, 6.1, 6.1, 5.6, 5.1))
rnorm(18, 5.5, 1)
round(rnorm(18, 5.5, 1))
round(rnorm(18, 5.5, 1), 2)
round(rnorm(18, 5.5, 1), 1)
set.seed(1)
round(rnorm(18, 5.5, 1), 1)
knitr::kable(round(rnorm(18, 5.5, 1), 1))
knitr::kable(data.frame)
knitr::kable(data.frame(round(rnorm(18, 5.5, 1), 1)))
knitr::kable(t(data.frame(round(rnorm(18, 5.5, 1), 1))))
knitr::kable(t(data.frame(valores = round(rnorm(18, 5.5, 1), 1))))
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
knitr::kable(t(dados))
table(gastos)
table(dados)
set.seed(2)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(3)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(4)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(5)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(6)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(7)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(8)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
set.seed(9)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
table(dados)
table(dados)
sort(table(dados))
sort(table(dados))[18]
sort(table(dados))[length(table(dados))]
names(sort(table(dados))[length(table(dados))])
knitr::kable(data.frame(Média = mean(dados),
Mediana = median(dados),
Moda = names(sort(table(dados))[length(table(dados))])))
median(dados)
mean(dados)
set.seed(9)
dados <- data.frame(Gastos = round(rnorm(18, 5.5, 1), 1))
knitr::kable(data.frame(Média = mean(dados),
Mediana = median(dados),
Moda = names(sort(table(dados))[length(table(dados))])))
mean(dados)
dados
knitr::kable(data.frame(Média = mean(dados$Gastos),
Mediana = median(dados$Gastos),
Moda = names(sort(table(dados$Gastos))[length(table(dados$Gastos))])))
knitr::kable(t(data.frame(Média = mean(dados$Gastos),
Mediana = median(dados$Gastos),
Moda = names(sort(table(dados$Gastos))[length(table(dados$Gastos))]))) )
knitr::kable(t(data.frame(Variância = round(var(dados$Gastos), 3),
`Desvio padrão` = round(sd(dados$Gastos), 3),
Amplitude = round(diff(range(dados$Gastos))))), 3)
knitr::kable(t(data.frame(Variância = round(var(dados$Gastos), 3),
`Desvio padrão` = round(sd(dados$Gastos), 3),
Amplitude = round(diff(range(dados$Gastos))), 3)))
knitr::kable(t(data.frame(Variância = round(var(dados$Gastos), 3),
`Desvio padrão` = round(sd(dados$Gastos), 3),
Amplitude = round(diff(range(dados$Gastos)), 3))))
breaks <- hist(dados$Gastos, plot = F)$breaks
breaks
faixas <- cut(dados$Gastos,
breaks = breaks,
include.lowest = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
tabela
names(tabela) <- c("Gastos", "Frequência", "Frequência relativa")
knitr::kable(tabela)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
tabela$acumulada <- cumsum(tabela$Frequência)
cumsum(tabela$Frequência)
tabela$acumulada <- cumsum(tabela$Freq)
faixas <- cut(dados$Gastos,
breaks = breaks,
include.lowest = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
tabela$acumulada <- cumsum(tabela$Freq)
tabela
breaks <- hist(dados$Gastos, plot = F)$breaks
faixas <- cut(dados$Gastos,
breaks = breaks,
include.lowest = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
tabela$acumulada <- cumsum(tabela$Freq)
breaks <- hist(dados$Gastos, plot = F)$breaks
faixas <- cut(dados$Gastos,
breaks = breaks,
include.lowest = T)
tabela <- as.data.frame(table(faixas))
tabela$Freq_r <- prop.table(table(faixas))
tabela$acumulada <- cumsum(tabela$Freq)
tabela$relativa_acumulada <- cumsum(tabela$Freq_r)
tabela
names(tabela)
hist(dados$Gastos)
hist(dados$Gastos, xlab = "Gastos",
ylab = "Frequência absoluna",
main = "",
col = 0, las = T)
dados$Gastos
0.991/sqrt(18)
2.1098*(0.991/sqrt(18))
5.317-(2.1098*(0.991/sqrt(18)))
5.317+(2.1098*(0.991/sqrt(18)))
round(5.317-(2.1098*(0.991/sqrt(18))), 3)
round(5.317+(2.1098*(0.991/sqrt(18))), 3)
round(5.317-(2.1098*(0.991/sqrt(18))), 3)
round(5.317+(2.1098*(0.991/sqrt(18))), 3)
t.test(dados$Gastos)
5.317-5
(5.317-5)/(0.991/sqrt(18)))
(5.317-5)/(0.991/sqrt(18))
?t.test(dados$Gastos)
t.test(dados$Gastos, alternative = 'greater',
mu = 5)
(5.317-5)/(0.991/sqrt(18))
?t.test(dados$Gastos, alternative = 'greater',
mu = 5)
t.test(dados$Gastos, alternative = 'greater',
mu = 5)
(5.317-5)/(0.991/sqrt(18))
mean(dados$Gastos)
(mean(dados$Gastos)-5)/(0.991/sqrt(18))
(mean(dados$Gastos)-5)/(sd(dados$Gastos)/sqrt(18))
(5.317-5)/(0.991/sqrt(18))
round((5.317-5)/(0.991/sqrt(18)))
round((5.317-5)/(0.991/sqrt(18)), 3)
knitr::opts_chunk$set(echo = TRUE, eval = F)
knitr::kable(data.frame(item = letters[1:4],
Resposta = c('$H_0: \\mu = 5 \\times H_1: \\mu > 5$',
'$t_{crit} = 1,7396$',
'$t_{calc} = 1,357$',
'Não \\ Rejeita $H_0$'
)))
round(pnorm(135, mean=120, sd=12, lower=FALSE), 3)
knitr::kable(data.frame(item = paste0(letters[1:5], ')'),
Resposta = c(paste0('$P(Y > 135)$ =',round(pnorm(135, mean=120, sd=12, lower=FALSE), 3)),
'$P(Y < 100)$',
'$P(100 < Y < 125)$',
'$Q1 = 1, Q2 = 1, Q3 = 1$',
'$P(Y<135$|$Y>120)$'
)))
paste0('$P(Y < 100)$',round(pnorm(100, mean=120, sd=12, lower=TRUE), 3))
paste0('$P(Y < 100) =$',round(pnorm(100, mean=120, sd=12, lower=TRUE), 3))
round(pnorm(125, mean=120, sd=12, lower=TRUE), 3)
round(pnorm(125, mean=120, sd=12, lower=TRUE), 3) - round(pnorm(100, mean=120, sd=12, lower=TRUE), 3)
round(pnorm(125, mean=120, sd=12, lower=TRUE), 3) - round(pnorm(100, mean=120, sd=12, lower=TRUE), 3)
round(pnorm(135, mean=120, sd=12, lower=FALSE), 3)
round(pnorm(100, mean=120, sd=12, lower=T), 3)
round(pnorm(125, mean=120, sd=12, lower=T), 3) - round(pnorm(100, mean=120, sd=12, lower=T), 3)
round(qnorm(c(0.25,0.5,0.75), mean=120, sd=12), 3)
round(pnorm(125, mean=120, sd=12, lower=TRUE), 3)
round(pnorm(135, mean=120, sd=12, lower=F), 3)
round(pnorm(135, mean=120, sd=12, lower=T), 3)
pnorm(135, mean=120, sd=12, lower=FALSE)
pnorm(100, mean=120, sd=12, lower=FALSE)
0.614/0.952
require(MASS);require(xtable);require(rootSolve)
options(width=85, digits=4, OutDec=",")
par(mar=c(3.5,3.5, 0.5, 0.5), mgp=c(1.8,.9,0))
PM <- 0.2*0.45+0.5*0.25+0.75*0.3
PH <- 1 - PM
prS <- 2/5 ; prNS <- 3/5
prLdS <- 7/10 ; prNLdS <- 3/10
prLdNS <- 1/4 ; prNLdNS <- 3/4
(prA <- prLeS <- prS * prLdS)
prSeNL <- prS * prNLdS
prNSeL <- prNS * prLdNS
(prB <- prSeNL + prNSeL)
(prC <- prNSeNL <- prNS * prNLdNS)
m <- matrix(c(80,6,9,5),ncol=2,dimnames=list(c("A","A^c"),c("B","B^c")))
mp <- prop.table(m)
require(xtable)
print(xtable(mp))
mpmar <- addmargins(mp)
mpesp <- outer(rowSums(mp), colSums(mp), "*")
print(xtable(mpmar, caption="Probabilidades conjuntas e marginais."))
print(xtable(mpesp, caption="Probabilidades conjuntas esperadas sob independência."))
Sweave2kntr
?Sweave2kntr
?Sweave2knitr
setwd("~/estbas-lineu/expositivas/bloco2-probabilidade/material-pj")
Sweave2knitr("preprob.Rnw")
?Sweave2knitr
knitr::Sweave2knitr("preprob.Rnw")
knitr::Sweave2knitr("posprob.Rnw")
knitr::Sweave2knitr("posprob.Rnw")
setwd("~/CE3012024")
git status
rmarkdown::render_site()
setwd("~/CE3012024")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()]
rmarkdown::render_site()
\vspace{0.3cm}
322+175
c(322,175)/sum()
c(322,175)/sum(c(322,175))
setwd("~/CE3012024")
rmarkdown::render_site()
x11()
n <- round(runif(1,100,200))    # Tamanho da amostra
n=1000
lambda_0 <- exp(rnorm(n))   # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
n=1000
lambda_0 <- exp(rnorm(n))   # log(y)
MASS::boxcox(lambda_0~1, lambda = seq(-1, 1, by = 0.01))
rmarkdown::render_site()
rmarkdown::render_site()
